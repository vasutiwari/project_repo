namespace :griffin_import do
  desc 'Take dynamic tables structure to find records'
  task :dynamic_griffin_load => :environment do
    tbl_name = ENV['table'] ||= ''
    if !tbl_name.empty?
      qry_file = File.open("#{Rails.root.to_s}/write_qry.txt","r")
      qry_data = qry_file.read
      qry_file.close
      qry_data = qry_data.split('___cont___')
      if qry_data[0] == tbl_name
        ActiveRecord::Base.connection.execute("truncate table Griffin_#{tbl_name};")
        puts "Retriving #{tbl_name} table please wait ..."
        qry = "insert into Griffin_#{tbl_name}(#{qry_data[1]}) values"
        row_expr = []
        reader = Nokogiri::XML::Reader(IO.read(Rails.root.to_s + '/GriffinResponse.xml'))
        reader.each do |node|
          if node.name == 'row' and node.node_type==1
            ins_data = []
            tmp = qry_data[2].split(',')
            tmp.each do |itr|
              if itr.include?('strip')
                ins_data << "\"#{eval(itr).gsub("\"","")}\""
              else
                ins_data << "\"#{eval(itr)}\""
              end
            end
            row_expr << "(#{ins_data.join(',')})"
          end
          if row_expr.size == 500
            ActiveRecord::Base.connection.execute(qry + row_expr.join(','))
            row_expr = []
          end
        end
      end
      ActiveRecord::Base.connection.execute(qry + row_expr.join(',')) unless row_expr.blank?
      puts "#{tbl_name} table has been imported."
    end
  end

  desc 'Take dynamic tables structure for tenant'
  task :dynamic_griffin_load_tenant => :environment do
    tbl_name = ENV['table'] ||= ''
    if !tbl_name.empty?
      qry_file = File.open("#{Rails.root.to_s}/write_qry.txt","r")
      qry_data = qry_file.read
      qry_file.close
      qry_data = qry_data.split('___cont___')
      if qry_data[0] == tbl_name
        ActiveRecord::Base.connection.execute("truncate table Griffin_#{tbl_name};")
        puts "Retriving #{tbl_name} table please wait ..."
        qry = "insert into Griffin_#{tbl_name}(#{qry_data[1]}) values"
        row_expr = []
        reader = Nokogiri::XML::Reader(IO.read(Rails.root.to_s + '/GriffinResponse.xml'))
        reader.each do |node|
          if node.name == 'tenant' and node.node_type==1
            ins_data = []
            tmp = qry_data[2].split(',')
            tmp.each do |itr|
              if itr.include?('strip')
                ins_data << "\"#{eval(itr).gsub("\"","")}\""
              else
                ins_data << "#{eval(itr)}"
              end
            end
            row_expr << "(#{ins_data.join(',')})"
          end
          if row_expr.size == 500
            ActiveRecord::Base.connection.execute(qry + row_expr.join(','))
            row_expr = []
          end
        end
        ActiveRecord::Base.connection.execute(qry + row_expr.join(',')) unless row_expr.blank?
        puts "#{tbl_name} table has been imported."
      end
    end
  end

  desc 'Take dynamic tables structure to find records'
  task :dynamic_griffin_load_automation => :environment do
    tbl_name = ENV['table'] ||= 'Total'
    if tbl_name== 'Total' and !tbl_name.empty?
      #      qry_file = File.open("#{Rails.root.to_s}/write_qry.txt","r")
      #      qry_data = qry_file.read
      #      qry_file.close
      qry_data = "Total___cont___HPPTY,UMONTH,IBOOK,HACCT,SBEGIN,SMTD,SBEGINBUDGET,SBUDGET,tRowVersion___cont___node.attribute('HPPTY').blank? ? 0 : node.attribute('HPPTY'),node.attribute('UMONTH').blank? ? '' : node.attribute('UMONTH').strip,node.attribute('IBOOK').blank? ? 0 : node.attribute('IBOOK'),node.attribute('HACCT').blank? ? 0 : node.attribute('HACCT'),node.attribute('SBEGIN').blank? ? 0 : node.attribute('SBEGIN'),node.attribute('SMTD').blank? ? 0 : node.attribute('SMTD'),node.attribute('SBEGINBUDGET').blank? ? 0 : node.attribute('SBEGINBUDGET'),node.attribute('SBUDGET').blank? ? 0 : node.attribute('SBUDGET'),node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion') "
      qry_data = qry_data.split('___cont___')
      if qry_data[0] == tbl_name
        row_expr = []
        reader = Nokogiri::XML::Reader(IO.read(Rails.root.to_s + '/GriffinResponse.xml'))
        reader.each do |node|
          if node.name == 'row' and node.node_type==1
            ins_data = []
            tmp = qry_data[2].split(',')
            tmp.each do |itr|
              if itr.include?('strip')
                if itr.include? 'SDESC'
                  ins_data << "\"#{eval(itr).gsub("\"","")}\""
                else
                  ins_data << "\"#{eval(itr)}\""
                end
              else
                ins_data << "#{eval(itr)}"
              end
            end
            p "call griffinTotalAutomation(#{ins_data.join(',')})"
            ActiveRecord::Base.connection.execute("call griffinTotalAutomation(#{ins_data.join(',')})")
          end
        end
      end
    elsif tbl_name== 'Property' and !tbl_name.empty?
      qry_data = "Property___cont___HMY,HTAX,HUSUALACCT,SCODE,SADDR1,IENTTYPE,ITYPE,SADDR2,SCITY,SSTATE,SZIPCODE,SEXTRAADDRLINE,FSALESTAX,ILATETYPE,DLATEPERCENT,SLATEMIN,SLATEPERDAY,BCOMMTYPE,DCOMMAMT,SCOMMMIN,BCOMMPOSTED,SCOMMPOSTEDAMT,SCASHRESERVE,DTMGMTDATE,IENDOFYEAR,BEXCLUDE,BACCRUAL,BSITE,BASSOCIATION,IPROPTYPE,SMAINTLIMIT,DWOCOMM,IPORTFOLIO,DPPRICE,ITYPERES,SNCREIF,HIDEALLEASE,IRERENT,SACQUIRE,SDISPOSE,HPAYER,DGSTRATE,hPropStorage,sPropStorAttn,hMVendor,sAddr3,sAddr4,hCountry,cNSFFee,hNSFChgCode,dtStamp,iPropReportingType,sPeriod,bInactive,dtInactive,hLegalEntity,sHmProjectType,iTypeCommercial,iTypeCondo,iTypeStudent,iTypeSenior,iTypeMilitary,iTypeAffordable,iTypePublicHousing,iTypeCoop,iTypeAssociation,iSubTypeAssoc,iTypeInternational,hcompany,iType2,hUserCreatedBy,hUserModifiedBy,dtCreated,dtLastModified,dtNCREIFInService,dSalesPrice,hCommMLA,HESTATE,bEstate,iTypeCSH,hForeigndb,sExtReference,dtNCREIFStopSubmission,tRowVersion___cont___node.attribute('HMY').blank? ? 0 : node.attribute('HMY'),node.attribute('HTAX').blank? ? 0 : node.attribute('HTAX'),node.attribute('HUSUALACCT').blank? ? 0 : node.attribute('HUSUALACCT'),node.attribute('SCODE').blank? ? '' : node.attribute('SCODE').strip,node.attribute('SADDR1').blank? ? '' : node.attribute('SADDR1').strip,node.attribute('IENTTYPE').blank? ? 0 : node.attribute('IENTTYPE'),node.attribute('ITYPE').blank? ? 0 : node.attribute('ITYPE'),node.attribute('SADDR2').blank? ? '' : node.attribute('SADDR2').strip,node.attribute('SCITY').blank? ? '' : node.attribute('SCITY').strip,node.attribute('SSTATE').blank? ? '' : node.attribute('SSTATE').strip,node.attribute('SZIPCODE').blank? ? '' : node.attribute('SZIPCODE').strip,node.attribute('SEXTRAADDRLINE').blank? ? '' : node.attribute('SEXTRAADDRLINE').strip,node.attribute('FSALESTAX').blank? ? 0 : node.attribute('FSALESTAX'),node.attribute('ILATETYPE').blank? ? 0 : node.attribute('ILATETYPE'),node.attribute('DLATEPERCENT').blank? ? 0 : node.attribute('DLATEPERCENT'),node.attribute('SLATEMIN').blank? ? 0 : node.attribute('SLATEMIN'),node.attribute('SLATEPERDAY').blank? ? 0 : node.attribute('SLATEPERDAY'),node.attribute('BCOMMTYPE').blank? ? 0 : node.attribute('BCOMMTYPE'),node.attribute('DCOMMAMT').blank? ? 0 : node.attribute('DCOMMAMT'),node.attribute('SCOMMMIN').blank? ? 0 : node.attribute('SCOMMMIN'),node.attribute('BCOMMPOSTED').blank? ? 0 : node.attribute('BCOMMPOSTED'),node.attribute('SCOMMPOSTEDAMT').blank? ? 0 : node.attribute('SCOMMPOSTEDAMT'),node.attribute('SCASHRESERVE').blank? ? 0 : node.attribute('SCASHRESERVE'),node.attribute('DTMGMTDATE').blank? ? '' : node.attribute('DTMGMTDATE').strip,node.attribute('IENDOFYEAR').blank? ? 0 : node.attribute('IENDOFYEAR'),node.attribute('BEXCLUDE').blank? ? 0 : node.attribute('BEXCLUDE'),node.attribute('BACCRUAL').blank? ? 0 : node.attribute('BACCRUAL'),node.attribute('BSITE').blank? ? 0 : node.attribute('BSITE'),node.attribute('BASSOCIATION').blank? ? 0 : node.attribute('BASSOCIATION'),node.attribute('IPROPTYPE').blank? ? 0 : node.attribute('IPROPTYPE'),node.attribute('SMAINTLIMIT').blank? ? 0 : node.attribute('SMAINTLIMIT'),node.attribute('DWOCOMM').blank? ? 0 : node.attribute('DWOCOMM'),node.attribute('IPORTFOLIO').blank? ? 0 : node.attribute('IPORTFOLIO'),node.attribute('DPPRICE').blank? ? 0 : node.attribute('DPPRICE'),node.attribute('ITYPERES').blank? ? 0 : node.attribute('ITYPERES'),node.attribute('SNCREIF').blank? ? '' : node.attribute('SNCREIF').strip,node.attribute('HIDEALLEASE').blank? ? 0 : node.attribute('HIDEALLEASE'),node.attribute('IRERENT').blank? ? 0 : node.attribute('IRERENT'),node.attribute('SACQUIRE').blank? ? '' : node.attribute('SACQUIRE').strip,node.attribute('SDISPOSE').blank? ? '' : node.attribute('SDISPOSE').strip,node.attribute('HPAYER').blank? ? 0 : node.attribute('HPAYER'),node.attribute('DGSTRATE').blank? ? 0 : node.attribute('DGSTRATE'),node.attribute('hPropStorage').blank? ? 0 : node.attribute('hPropStorage'),node.attribute('sPropStorAttn').blank? ? '' : node.attribute('sPropStorAttn').strip,node.attribute('hMVendor').blank? ? 0 : node.attribute('hMVendor'),node.attribute('sAddr3').blank? ? '' : node.attribute('sAddr3').strip,node.attribute('sAddr4').blank? ? '' : node.attribute('sAddr4').strip,node.attribute('hCountry').blank? ? 0 : node.attribute('hCountry'),node.attribute('cNSFFee').blank? ? 0 : node.attribute('cNSFFee'),node.attribute('hNSFChgCode').blank? ? 0 : node.attribute('hNSFChgCode'),node.attribute('dtStamp').blank? ? '' : node.attribute('dtStamp').strip,node.attribute('iPropReportingType').blank? ? 0 : node.attribute('iPropReportingType'),node.attribute('sPeriod').blank? ? '' : node.attribute('sPeriod').strip,node.attribute('bInactive').blank? ? 0 : node.attribute('bInactive'),node.attribute('dtInactive').blank? ? '' : node.attribute('dtInactive').strip,node.attribute('hLegalEntity').blank? ? 0 : node.attribute('hLegalEntity'),node.attribute('sHmProjectType').blank? ? '' : node.attribute('sHmProjectType').strip,node.attribute('iTypeCommercial').blank? ? 0 : node.attribute('iTypeCommercial'),node.attribute('iTypeCondo').blank? ? 0 : node.attribute('iTypeCondo'),node.attribute('iTypeStudent').blank? ? 0 : node.attribute('iTypeStudent'),node.attribute('iTypeSenior').blank? ? 0 : node.attribute('iTypeSenior'),node.attribute('iTypeMilitary').blank? ? 0 : node.attribute('iTypeMilitary'),node.attribute('iTypeAffordable').blank? ? 0 : node.attribute('iTypeAffordable'),node.attribute('iTypePublicHousing').blank? ? 0 : node.attribute('iTypePublicHousing'),node.attribute('iTypeCoop').blank? ? 0 : node.attribute('iTypeCoop'),node.attribute('iTypeAssociation').blank? ? 0 : node.attribute('iTypeAssociation'),node.attribute('iSubTypeAssoc').blank? ? 0 : node.attribute('iSubTypeAssoc'),node.attribute('iTypeInternational').blank? ? 0 : node.attribute('iTypeInternational'),node.attribute('hcompany').blank? ? 0 : node.attribute('hcompany'),node.attribute('iType2').blank? ? 0 : node.attribute('iType2'),node.attribute('hUserCreatedBy').blank? ? 0 : node.attribute('hUserCreatedBy'),node.attribute('hUserModifiedBy').blank? ? 0 : node.attribute('hUserModifiedBy'),node.attribute('dtCreated').blank? ? '' : node.attribute('dtCreated').strip,node.attribute('dtLastModified').blank? ? '' : node.attribute('dtLastModified').strip,node.attribute('dtNCREIFInService').blank? ? '' : node.attribute('dtNCREIFInService').strip,node.attribute('dSalesPrice').blank? ? 0 : node.attribute('dSalesPrice'),node.attribute('hCommMLA').blank? ? 0 : node.attribute('hCommMLA'),node.attribute('HESTATE').blank? ? 0 : node.attribute('HESTATE'),node.attribute('bEstate').blank? ? 0 : node.attribute('bEstate'),node.attribute('iTypeCSH').blank? ? 0 : node.attribute('iTypeCSH'),node.attribute('hForeigndb').blank? ? 0 : node.attribute('hForeigndb'),node.attribute('sExtReference').blank? ? '' : node.attribute('sExtReference').strip,node.attribute('dtNCREIFStopSubmission').blank? ? '' : node.attribute('dtNCREIFStopSubmission').strip,node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_data = qry_data.split('___cont___')
      if qry_data[0] == tbl_name
        row_expr = []
        reader = Nokogiri::XML::Reader(IO.read(Rails.root.to_s + '/GriffinResponse.xml'))
        reader.each do |node|
          if node.name == 'row' and node.node_type==1
            ins_data = []
            tmp = qry_data[2].split(',')
            tmp.each do |itr|
              if itr.include?('strip')
                if itr.include? 'SDESC'
                  ins_data << "\"#{eval(itr).gsub("\"","")}\""
                else
                  ins_data << "\"#{eval(itr)}\""
                end
              else
                ins_data << "#{eval(itr)}"
              end
            end
            p "call griffinTotalAutomationProperty(#{ins_data.join(',')})"
            ActiveRecord::Base.connection.execute("call griffinTotalAutomationProperty(#{ins_data.join(',')})")
          end
        end
      end
      ActiveRecord::Base.connection.execute("update timestamp_logs set last_ts=(select max(tRowVersion) from Griffin_Property) where table_name='Property'")
    end
  end

  desc 'Take dynamic tables structure to find records'
  task :dynamic_griffin_leases_automation => :environment do
    tbl_name = ENV['table'] ||= ''
    chk_node = 'row' # default for the xml response nodes
    verbose = ENV['verbose'] ||= ''
    if !tbl_name.empty?
      qry_map = {}
      qry_map['commAmendments'] = "commAmendments___cont___hMy,hTenant,hOption,hDeal,iStatus,iType,iSequence,dContractArea,dRent,iTerm,dtStart,dtEnd,dtSign,dtAmendment,dtOccupancy,dtPossession,dtRentStart,dPenalty,sSubject,sNotes,bReplaceAll,dtMovein,dtMoveout,dHoldoverPercentage,hUserActivated,hAmendmentCopy,iTerminationType,dtNotice,sDesc,hAmendmentModified,bReport,hUserLastUpdate,dtLastUpdate,hAmendmentInactive,iModificationType,bOngoingLease,bCopySpace,bCopyRent,bCopyCAM,bCopyMisc,bCopyRecovery,bCopyRetail,bMasterAmendment,hParentAmendment,dtContractEndDate,iSubType,iAmendmentImportNumber,hProposalStage,iProposalType,hProposal,hProposalProbability,iEstimateType,hamendmentcopyfrom,hUserCreatedBy,dtCreated,hUserModifiedBy,dtLastModified,tRowVersion___cont___node.attribute('hMy').blank? ? 0 : node.attribute('hMy'),node.attribute('hTenant').blank? ? 0 : node.attribute('hTenant'),node.attribute('hOption').blank? ? 0 : node.attribute('hOption'),node.attribute('hDeal').blank? ? 0 : node.attribute('hDeal'),node.attribute('iStatus').blank? ? 0 : node.attribute('iStatus'),node.attribute('iType').blank? ? 0 : node.attribute('iType'),node.attribute('iSequence').blank? ? 0 : node.attribute('iSequence'),node.attribute('dContractArea').blank? ? 0 : node.attribute('dContractArea'),node.attribute('dRent').blank? ? 0 : node.attribute('dRent'),node.attribute('iTerm').blank? ? 0 : node.attribute('iTerm'),node.attribute('dtStart').blank? ? '' : node.attribute('dtStart').strip,node.attribute('dtEnd').blank? ? '' : node.attribute('dtEnd').strip,node.attribute('dtSign').blank? ? '' : node.attribute('dtSign').strip,node.attribute('dtAmendment').blank? ? '' : node.attribute('dtAmendment').strip,node.attribute('dtOccupancy').blank? ? '' : node.attribute('dtOccupancy').strip,node.attribute('dtPossession').blank? ? '' : node.attribute('dtPossession').strip,node.attribute('dtRentStart').blank? ? '' : node.attribute('dtRentStart').strip,node.attribute('dPenalty').blank? ? 0 : node.attribute('dPenalty'),node.attribute('sSubject').blank? ? '' : node.attribute('sSubject').strip,node.attribute('sNotes').blank? ? '' : node.attribute('sNotes').strip,node.attribute('bReplaceAll').blank? ? 0 : node.attribute('bReplaceAll'),node.attribute('dtMovein').blank? ? '' : node.attribute('dtMovein').strip,node.attribute('dtMoveout').blank? ? '' : node.attribute('dtMoveout').strip,node.attribute('dHoldoverPercentage').blank? ? 0 : node.attribute('dHoldoverPercentage'),node.attribute('hUserActivated').blank? ? 0 : node.attribute('hUserActivated'),node.attribute('hAmendmentCopy').blank? ? 0 : node.attribute('hAmendmentCopy'),node.attribute('iTerminationType').blank? ? 0 : node.attribute('iTerminationType'),node.attribute('dtNotice').blank? ? '' : node.attribute('dtNotice').strip,node.attribute('sDesc').blank? ? '' : node.attribute('sDesc').strip,node.attribute('hAmendmentModified').blank? ? 0 : node.attribute('hAmendmentModified'),node.attribute('bReport').blank? ? 0 : node.attribute('bReport'),node.attribute('hUserLastUpdate').blank? ? 0 : node.attribute('hUserLastUpdate'),node.attribute('dtLastUpdate').blank? ? '' : node.attribute('dtLastUpdate').strip,node.attribute('hAmendmentInactive').blank? ? 0 : node.attribute('hAmendmentInactive'),node.attribute('iModificationType').blank? ? 0 : node.attribute('iModificationType'),node.attribute('bOngoingLease').blank? ? 0 : node.attribute('bOngoingLease'),node.attribute('bCopySpace').blank? ? 0 : node.attribute('bCopySpace'),node.attribute('bCopyRent').blank? ? 0 : node.attribute('bCopyRent'),node.attribute('bCopyCAM').blank? ? 0 : node.attribute('bCopyCAM'),node.attribute('bCopyMisc').blank? ? 0 : node.attribute('bCopyMisc'),node.attribute('bCopyRecovery').blank? ? 0 : node.attribute('bCopyRecovery'),node.attribute('bCopyRetail').blank? ? 0 : node.attribute('bCopyRetail'),node.attribute('bMasterAmendment').blank? ? 0 : node.attribute('bMasterAmendment'),node.attribute('hParentAmendment').blank? ? 0 : node.attribute('hParentAmendment'),node.attribute('dtContractEndDate').blank? ? '' : node.attribute('dtContractEndDate').strip,node.attribute('iSubType').blank? ? 0 : node.attribute('iSubType'),node.attribute('iAmendmentImportNumber').blank? ? 0 : node.attribute('iAmendmentImportNumber'),node.attribute('hProposalStage').blank? ? 0 : node.attribute('hProposalStage'),node.attribute('iProposalType').blank? ? 0 : node.attribute('iProposalType'),node.attribute('hProposal').blank? ? 0 : node.attribute('hProposal'),node.attribute('hProposalProbability').blank? ? 0 : node.attribute('hProposalProbability'),node.attribute('iEstimateType').blank? ? 0 : node.attribute('iEstimateType'),node.attribute('hamendmentcopyfrom').blank? ? 0 : node.attribute('hamendmentcopyfrom'),node.attribute('hUserCreatedBy').blank? ? 0 : node.attribute('hUserCreatedBy'),node.attribute('dtCreated').blank? ? '' : node.attribute('dtCreated').strip,node.attribute('hUserModifiedBy').blank? ? 0 : node.attribute('hUserModifiedBy'),node.attribute('dtLastModified').blank? ? '' : node.attribute('dtLastModified').strip,node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['FloorPlan'] = "FloorPlan___cont___hMy,sCode,sName,hProperty,dBeds,dBaths,dRentLow,dRentHigh,dSqFtLow,dSqFtHigh,dDepositLow,dDepositHigh,hUserCreatedBy,dtCreated,hUserModifiedBy,dtLastModified,sDescription,tRowVersion___cont___node.attribute('hMy').blank? ? 0 : node.attribute('hMy'),node.attribute('sCode').blank? ? '' : node.attribute('sCode').strip,node.attribute('sName').blank? ? '' : node.attribute('sName').strip,node.attribute('hProperty').blank? ? 0 : node.attribute('hProperty'),node.attribute('dBeds').blank? ? 0 : node.attribute('dBeds'),node.attribute('dBaths').blank? ? 0 : node.attribute('dBaths'),node.attribute('dRentLow').blank? ? 0 : node.attribute('dRentLow'),node.attribute('dRentHigh').blank? ? 0 : node.attribute('dRentHigh'),node.attribute('dSqFtLow').blank? ? 0 : node.attribute('dSqFtLow'),node.attribute('dSqFtHigh').blank? ? 0 : node.attribute('dSqFtHigh'),node.attribute('dDepositLow').blank? ? 0 : node.attribute('dDepositLow'),node.attribute('dDepositHigh').blank? ? 0 : node.attribute('dDepositHigh'),node.attribute('hUserCreatedBy').blank? ? 0 : node.attribute('hUserCreatedBy'),node.attribute('dtCreated').blank? ? '' : node.attribute('dtCreated').strip,node.attribute('hUserModifiedBy').blank? ? 0 : node.attribute('hUserModifiedBy'),node.attribute('dtLastModified').blank? ? '' : node.attribute('dtLastModified').strip,node.attribute('sDescription').blank? ? '' : node.attribute('sDescription').strip,node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['unit'] = "unit___cont___HMY,HPROPERTY,HUNITTYPE,SCODE,SRENT,DSQFT,IRENTALTYPE,SDEPOSIT0,SDEPOSIT1,SDEPOSIT2,SDEPOSIT3,SDEPOSIT4,SDEPOSIT5,SDEPOSIT6,SDEPOSIT7,SDEPOSIT8,SDEPOSIT9,SPASTRENT0,SPASTRENT1,SPASTRENT2,SPASTRENT3,SPASTRENT4,SPASTRENT5,SPASTRENT6,SPASTRENT7,SPASTRENT8,SPASTRENT9,SPASTRENT10,SPASTRENT11,DTPASTRENTINC0,DTPASTRENTINC1,DTPASTRENTINC2,DTPASTRENTINC3,DTPASTRENTINC4,DTPASTRENTINC5,DTPASTRENTINC6,DTPASTRENTINC7,DTPASTRENTINC8,DTPASTRENTINC9,DTPASTRENTINC10,DTPASTRENTINC11,SFIELD0,SFIELD1,SFIELD2,SFIELD3,SFIELD4,SFIELD5,SFIELD6,SFIELD7,SFIELD8,SFIELD9,IRENTREADY,AMENITY1,AMENITY2,AMENITY3,AMENITY4,AMENITY5,AMENITY6,AMENITY7,AMENITY8,AMENITY9,AMENITY10,AMENITY11,AMENITY12,AMENITY13,AMENITY14,AMENITY15,AMENITY16,AMENITY17,AMENITY18,AMENITY19,AMENITY20,EXCLUDE,PUCODE,SCONTRACTNO,CCONTRACTRENT,IBEDROOMS,CSURCHARGE,FSETASIDE,CUTILALLOW,STACT1,STACT2,HCONTRACT,SELIG,SALTID,hBldg,bOCC1,bOCC2,dtStamp,dtAvailable,dtHoldUntil,hProspect,sStatus,dtVacant,dtReady,hFloor,iSegmentType,hLocation,hUserCreatedBy,hUserModifiedBy,dtCreated,dtLastModified,iRentObject,hCommMLA,hLeaseType,bNoUHTrigger,hForeigndb,sExtReference,iTotalUnits,iTotalRooms,bPortalExcluded,iPortalDisplayRank,tRowVersion___cont___node.attribute('HMY').blank? ? 0 : node.attribute('HMY'),node.attribute('HPROPERTY').blank? ? 0 : node.attribute('HPROPERTY'),node.attribute('HUNITTYPE').blank? ? 0 : node.attribute('HUNITTYPE'),node.attribute('SCODE').blank? ? '' : node.attribute('SCODE').strip,node.attribute('SRENT').blank? ? 0 : node.attribute('SRENT'),node.attribute('DSQFT').blank? ? 0 : node.attribute('DSQFT'),node.attribute('IRENTALTYPE').blank? ? 0 : node.attribute('IRENTALTYPE'),node.attribute('SDEPOSIT0').blank? ? 0 : node.attribute('SDEPOSIT0'),node.attribute('SDEPOSIT1').blank? ? 0 : node.attribute('SDEPOSIT1'),node.attribute('SDEPOSIT2').blank? ? 0 : node.attribute('SDEPOSIT2'),node.attribute('SDEPOSIT3').blank? ? 0 : node.attribute('SDEPOSIT3'),node.attribute('SDEPOSIT4').blank? ? 0 : node.attribute('SDEPOSIT4'),node.attribute('SDEPOSIT5').blank? ? 0 : node.attribute('SDEPOSIT5'),node.attribute('SDEPOSIT6').blank? ? 0 : node.attribute('SDEPOSIT6'),node.attribute('SDEPOSIT7').blank? ? 0 : node.attribute('SDEPOSIT7'),node.attribute('SDEPOSIT8').blank? ? 0 : node.attribute('SDEPOSIT8'),node.attribute('SDEPOSIT9').blank? ? 0 : node.attribute('SDEPOSIT9'),node.attribute('SPASTRENT0').blank? ? 0 : node.attribute('SPASTRENT0'),node.attribute('SPASTRENT1').blank? ? 0 : node.attribute('SPASTRENT1'),node.attribute('SPASTRENT2').blank? ? 0 : node.attribute('SPASTRENT2'),node.attribute('SPASTRENT3').blank? ? 0 : node.attribute('SPASTRENT3'),node.attribute('SPASTRENT4').blank? ? 0 : node.attribute('SPASTRENT4'),node.attribute('SPASTRENT5').blank? ? 0 : node.attribute('SPASTRENT5'),node.attribute('SPASTRENT6').blank? ? 0 : node.attribute('SPASTRENT6'),node.attribute('SPASTRENT7').blank? ? 0 : node.attribute('SPASTRENT7'),node.attribute('SPASTRENT8').blank? ? 0 : node.attribute('SPASTRENT8'),node.attribute('SPASTRENT9').blank? ? 0 : node.attribute('SPASTRENT9'),node.attribute('SPASTRENT10').blank? ? 0 : node.attribute('SPASTRENT10'),node.attribute('SPASTRENT11').blank? ? 0 : node.attribute('SPASTRENT11'),node.attribute('DTPASTRENTINC0').blank? ? '' : node.attribute('DTPASTRENTINC0').strip,node.attribute('DTPASTRENTINC1').blank? ? '' : node.attribute('DTPASTRENTINC1').strip,node.attribute('DTPASTRENTINC2').blank? ? '' : node.attribute('DTPASTRENTINC2').strip,node.attribute('DTPASTRENTINC3').blank? ? '' : node.attribute('DTPASTRENTINC3').strip,node.attribute('DTPASTRENTINC4').blank? ? '' : node.attribute('DTPASTRENTINC4').strip,node.attribute('DTPASTRENTINC5').blank? ? '' : node.attribute('DTPASTRENTINC5').strip,node.attribute('DTPASTRENTINC6').blank? ? '' : node.attribute('DTPASTRENTINC6').strip,node.attribute('DTPASTRENTINC7').blank? ? '' : node.attribute('DTPASTRENTINC7').strip,node.attribute('DTPASTRENTINC8').blank? ? '' : node.attribute('DTPASTRENTINC8').strip,node.attribute('DTPASTRENTINC9').blank? ? '' : node.attribute('DTPASTRENTINC9').strip,node.attribute('DTPASTRENTINC10').blank? ? '' : node.attribute('DTPASTRENTINC10').strip,node.attribute('DTPASTRENTINC11').blank? ? '' : node.attribute('DTPASTRENTINC11').strip,node.attribute('SFIELD0').blank? ? '' : node.attribute('SFIELD0').strip,node.attribute('SFIELD1').blank? ? '' : node.attribute('SFIELD1').strip,node.attribute('SFIELD2').blank? ? '' : node.attribute('SFIELD2').strip,node.attribute('SFIELD3').blank? ? '' : node.attribute('SFIELD3').strip,node.attribute('SFIELD4').blank? ? '' : node.attribute('SFIELD4').strip,node.attribute('SFIELD5').blank? ? '' : node.attribute('SFIELD5').strip,node.attribute('SFIELD6').blank? ? '' : node.attribute('SFIELD6').strip,node.attribute('SFIELD7').blank? ? '' : node.attribute('SFIELD7').strip,node.attribute('SFIELD8').blank? ? '' : node.attribute('SFIELD8').strip,node.attribute('SFIELD9').blank? ? '' : node.attribute('SFIELD9').strip,node.attribute('IRENTREADY').blank? ? 0 : node.attribute('IRENTREADY'),node.attribute('AMENITY1').blank? ? 0 : node.attribute('AMENITY1'),node.attribute('AMENITY2').blank? ? 0 : node.attribute('AMENITY2'),node.attribute('AMENITY3').blank? ? 0 : node.attribute('AMENITY3'),node.attribute('AMENITY4').blank? ? 0 : node.attribute('AMENITY4'),node.attribute('AMENITY5').blank? ? 0 : node.attribute('AMENITY5'),node.attribute('AMENITY6').blank? ? 0 : node.attribute('AMENITY6'),node.attribute('AMENITY7').blank? ? 0 : node.attribute('AMENITY7'),node.attribute('AMENITY8').blank? ? 0 : node.attribute('AMENITY8'),node.attribute('AMENITY9').blank? ? 0 : node.attribute('AMENITY9'),node.attribute('AMENITY10').blank? ? 0 : node.attribute('AMENITY10'),node.attribute('AMENITY11').blank? ? 0 : node.attribute('AMENITY11'),node.attribute('AMENITY12').blank? ? 0 : node.attribute('AMENITY12'),node.attribute('AMENITY13').blank? ? 0 : node.attribute('AMENITY13'),node.attribute('AMENITY14').blank? ? 0 : node.attribute('AMENITY14'),node.attribute('AMENITY15').blank? ? 0 : node.attribute('AMENITY15'),node.attribute('AMENITY16').blank? ? 0 : node.attribute('AMENITY16'),node.attribute('AMENITY17').blank? ? 0 : node.attribute('AMENITY17'),node.attribute('AMENITY18').blank? ? 0 : node.attribute('AMENITY18'),node.attribute('AMENITY19').blank? ? 0 : node.attribute('AMENITY19'),node.attribute('AMENITY20').blank? ? 0 : node.attribute('AMENITY20'),node.attribute('EXCLUDE').blank? ? 0 : node.attribute('EXCLUDE'),node.attribute('PUCODE').blank? ? '' : node.attribute('PUCODE').strip,node.attribute('SCONTRACTNO').blank? ? '' : node.attribute('SCONTRACTNO').strip,node.attribute('CCONTRACTRENT').blank? ? 0 : node.attribute('CCONTRACTRENT'),node.attribute('IBEDROOMS').blank? ? 0 : node.attribute('IBEDROOMS'),node.attribute('CSURCHARGE').blank? ? 0 : node.attribute('CSURCHARGE'),node.attribute('FSETASIDE').blank? ? 0 : node.attribute('FSETASIDE'),node.attribute('CUTILALLOW').blank? ? 0 : node.attribute('CUTILALLOW'),node.attribute('STACT1').blank? ? '' : node.attribute('STACT1').strip,node.attribute('STACT2').blank? ? '' : node.attribute('STACT2').strip,node.attribute('HCONTRACT').blank? ? 0 : node.attribute('HCONTRACT'),node.attribute('SELIG').blank? ? '' : node.attribute('SELIG').strip,node.attribute('SALTID').blank? ? '' : node.attribute('SALTID').strip,node.attribute('hBldg').blank? ? 0 : node.attribute('hBldg'),node.attribute('bOCC1').blank? ? 0 : node.attribute('bOCC1'),node.attribute('bOCC2').blank? ? 0 : node.attribute('bOCC2'),node.attribute('dtStamp').blank? ? '' : node.attribute('dtStamp').strip,node.attribute('dtAvailable').blank? ? '' : node.attribute('dtAvailable').strip,node.attribute('dtHoldUntil').blank? ? '' : node.attribute('dtHoldUntil').strip,node.attribute('hProspect').blank? ? 0 : node.attribute('hProspect'),node.attribute('sStatus').blank? ? '' : node.attribute('sStatus').strip,node.attribute('dtVacant').blank? ? '' : node.attribute('dtVacant').strip,node.attribute('dtReady').blank? ? '' : node.attribute('dtReady').strip,node.attribute('hFloor').blank? ? 0 : node.attribute('hFloor'),node.attribute('iSegmentType').blank? ? 0 : node.attribute('iSegmentType'),node.attribute('hLocation').blank? ? 0 : node.attribute('hLocation'),node.attribute('hUserCreatedBy').blank? ? 0 : node.attribute('hUserCreatedBy'),node.attribute('hUserModifiedBy').blank? ? 0 : node.attribute('hUserModifiedBy'),node.attribute('dtCreated').blank? ? '' : node.attribute('dtCreated').strip,node.attribute('dtLastModified').blank? ? '' : node.attribute('dtLastModified').strip,node.attribute('iRentObject').blank? ? 0 : node.attribute('iRentObject'),node.attribute('hCommMLA').blank? ? 0 : node.attribute('hCommMLA'),node.attribute('hLeaseType').blank? ? 0 : node.attribute('hLeaseType'),node.attribute('bNoUHTrigger').blank? ? 0 : node.attribute('bNoUHTrigger'),node.attribute('hForeigndb').blank? ? 0 : node.attribute('hForeigndb'),node.attribute('sExtReference').blank? ? '' : node.attribute('sExtReference').strip,node.attribute('iTotalUnits').blank? ? 0 : node.attribute('iTotalUnits'),node.attribute('iTotalRooms').blank? ? 0 : node.attribute('iTotalRooms'),node.attribute('bPortalExcluded').blank? ? 0 : node.attribute('bPortalExcluded'),node.attribute('iPortalDisplayRank').blank? ? 0 : node.attribute('iPortalDisplayRank'),node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['CommCostInducement'] = "CommCostInducement___cont___hMy,hLeaseAssetType,sDesc,cAmount,cBasis,dtStart,dtEnd,iAmountType,dtAvailable,dtIncurred,hPayee,hAsset,hTenant,iTerm,hDeal,hAmendment,hUserCreatedBy,dtCreated,hUserModifiedBy,dtLastModified,tRowVersion___cont___node.attribute('hMy').blank? ? 0 : node.attribute('hMy'),node.attribute('hLeaseAssetType').blank? ? 0 : node.attribute('hLeaseAssetType'),node.attribute('sDesc').blank? ? '' : node.attribute('sDesc').strip,node.attribute('cAmount').blank? ? 0 : node.attribute('cAmount'),node.attribute('cBasis').blank? ? 0 : node.attribute('cBasis'),node.attribute('dtStart').blank? ? '' : node.attribute('dtStart').strip,node.attribute('dtEnd').blank? ? '' : node.attribute('dtEnd').strip,node.attribute('iAmountType').blank? ? 0 : node.attribute('iAmountType'),node.attribute('dtAvailable').blank? ? '' : node.attribute('dtAvailable').strip,node.attribute('dtIncurred').blank? ? '' : node.attribute('dtIncurred').strip,node.attribute('hPayee').blank? ? 0 : node.attribute('hPayee'),node.attribute('hAsset').blank? ? 0 : node.attribute('hAsset'),node.attribute('hTenant').blank? ? 0 : node.attribute('hTenant'),node.attribute('iTerm').blank? ? 0 : node.attribute('iTerm'),node.attribute('hDeal').blank? ? 0 : node.attribute('hDeal'),node.attribute('hAmendment').blank? ? 0 : node.attribute('hAmendment'),node.attribute('hUserCreatedBy').blank? ? 0 : node.attribute('hUserCreatedBy'),node.attribute('dtCreated').blank? ? '' : node.attribute('dtCreated').strip,node.attribute('hUserModifiedBy').blank? ? 0 : node.attribute('hUserModifiedBy'),node.attribute('dtLastModified').blank? ? '' : node.attribute('dtLastModified').strip,node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['CommLeaseAssetType'] = "CommLeaseAssetType___cont___hMy,scode,sdesc,hBook,hCreditAccount,hDebitAccount,hChart,hUserCreatedBy,dtCreated,hUserModifiedBy,dtLastModified,tRowVersion___cont___node.attribute('hMy').blank? ? 0 : node.attribute('hMy'),node.attribute('scode').blank? ? '' : node.attribute('scode').strip,node.attribute('sdesc').blank? ? '' : node.attribute('sdesc').strip,node.attribute('hBook').blank? ? 0 : node.attribute('hBook'),node.attribute('hCreditAccount').blank? ? 0 : node.attribute('hCreditAccount'),node.attribute('hDebitAccount').blank? ? 0 : node.attribute('hDebitAccount'),node.attribute('hChart').blank? ? 0 : node.attribute('hChart'),node.attribute('hUserCreatedBy').blank? ? 0 : node.attribute('hUserCreatedBy'),node.attribute('dtCreated').blank? ? '' : node.attribute('dtCreated').strip,node.attribute('hUserModifiedBy').blank? ? 0 : node.attribute('hUserModifiedBy'),node.attribute('dtLastModified').blank? ? '' : node.attribute('dtLastModified').strip,node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['commTenant'] = "commTenant___cont___hMy,hTenant,hNAICS,hSIC,hSalesCategory,iLeaseStatus,hLeaseType,hDeal,bAnchor,bclientliability,dtRentModified,hUserRentModified,hCommICS,bShowOpeningChargesLink,bEnableEdit,bChargeLFOnUnpaid,iDaysInYear,hSalesCurrency,hSalesCurExchRateType,hUserCreatedBy,dtCreated,hUserModifiedBy,dtLastModified,tRowVersion___cont___node.attribute('hMy').blank? ? 0 : node.attribute('hMy'),node.attribute('hTenant').blank? ? 0 : node.attribute('hTenant'),node.attribute('hNAICS').blank? ? 0 : node.attribute('hNAICS'),node.attribute('hSIC').blank? ? 0 : node.attribute('hSIC'),node.attribute('hSalesCategory').blank? ? 0 : node.attribute('hSalesCategory'),node.attribute('iLeaseStatus').blank? ? 0 : node.attribute('iLeaseStatus'),node.attribute('hLeaseType').blank? ? 0 : node.attribute('hLeaseType'),node.attribute('hDeal').blank? ? 0 : node.attribute('hDeal'),node.attribute('bAnchor').blank? ? 0 : node.attribute('bAnchor'),node.attribute('bclientliability').blank? ? 0 : node.attribute('bclientliability'),node.attribute('dtRentModified').blank? ? '' : node.attribute('dtRentModified').strip,node.attribute('hUserRentModified').blank? ? 0 : node.attribute('hUserRentModified'),node.attribute('hCommICS').blank? ? 0 : node.attribute('hCommICS'),node.attribute('bShowOpeningChargesLink').blank? ? 0 : node.attribute('bShowOpeningChargesLink'),node.attribute('bEnableEdit').blank? ? 0 : node.attribute('bEnableEdit'),node.attribute('bChargeLFOnUnpaid').blank? ? 0 : node.attribute('bChargeLFOnUnpaid'),node.attribute('iDaysInYear').blank? ? 0 : node.attribute('iDaysInYear'),node.attribute('hSalesCurrency').blank? ? 0 : node.attribute('hSalesCurrency'),node.attribute('hSalesCurExchRateType').blank? ? 0 : node.attribute('hSalesCurExchRateType'),node.attribute('hUserCreatedBy').blank? ? 0 : node.attribute('hUserCreatedBy'),node.attribute('dtCreated').blank? ? '' : node.attribute('dtCreated').strip,node.attribute('hUserModifiedBy').blank? ? 0 : node.attribute('hUserModifiedBy'),node.attribute('dtLastModified').blank? ? '' : node.attribute('dtLastModified').strip,node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['commLeaseType'] = "commLeaseType___cont___hMy,sCode,sDesc,iSystemType,iUnitRentalType,iLeaseRecoveryType,bCorporate,bOwnerLiability,hUserCreatedBy,dtCreated,hUserModifiedBy,dtLastModified,tRowVersion___cont___node.attribute('hMy').blank? ? 0 : node.attribute('hMy'),node.attribute('sCode').blank? ? '' : node.attribute('sCode').strip,node.attribute('sDesc').blank? ? '' : node.attribute('sDesc').strip,node.attribute('iSystemType').blank? ? 0 : node.attribute('iSystemType'),node.attribute('iUnitRentalType').blank? ? 0 : node.attribute('iUnitRentalType'),node.attribute('iLeaseRecoveryType').blank? ? 0 : node.attribute('iLeaseRecoveryType'),node.attribute('bCorporate').blank? ? 0 : node.attribute('bCorporate'),node.attribute('bOwnerLiability').blank? ? 0 : node.attribute('bOwnerLiability'),node.attribute('hUserCreatedBy').blank? ? 0 : node.attribute('hUserCreatedBy'),node.attribute('dtCreated').blank? ? '' : node.attribute('dtCreated').strip,node.attribute('hUserModifiedBy').blank? ? 0 : node.attribute('hUserModifiedBy'),node.attribute('dtLastModified').blank? ? '' : node.attribute('dtLastModified').strip,node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['camrule'] = "camrule___cont___HMY,HCHARGECODE,HTAXCTYPE,HCPI,HTENANT,DTFROM,DTTO,IESTIMATETYPE,DESTIMATED,IMINTYPE,DMIN,IMAXTYPE,DMAX,IPERIOD,ITYPE,DPERCENT0,DPERCENT1,DPERCENT2,DPERCENT3,DPERCENT4,DPERCENT5,DPERCENT6,DPERCENT7,DPERCENT8,DSTEP0,DSTEP1,DSTEP2,DSTEP3,DSTEP4,DSTEP5,DSTEP6,DSTEP7,DSTEP8,ISTEPTYPE0,ISTEPTYPE1,ISTEPTYPE2,ISTEPTYPE3,ISTEPTYPE4,ISTEPTYPE5,ISTEPTYPE6,ISTEPTYPE7,ISTEPTYPE8,SGROUP,DTAXRATE,SSITECREATEDBY,HSITECREATED,DFACTOR,IMONTH,IINTERVAL,SPOSTCODE,NOTES,BASERULE,GROUPBP,CUMULATIVE,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC_,INTEREST,LATEFEE,ITSQFT,IPSQFT,HFORMULA,SFIELD0,SFIELD1,SFIELD2,SFIELD3,SFIELD4,SFIELD5,SFIELD6,SFIELD7,SFIELD8,SFIELD9,SFIELD10,SFIELD11,SFIELD12,SFIELD13,SFIELD14,SFIELD15,SFIELD16,SFIELD17,SFIELD18,SFIELD19,bHold,bACH,dtACHPosted,iMaxPerMo,iCtPerMo,dPdSoFar,hAcctTreeDetail,iAmountPeriod,hUnit,hProp,DTINCREASE,IINVFREQUENCY,IBILLDAY,HTRANTYPE,IBILLINARREARS,ILATEGRACE,IINTERESTFREE,ILATETYPE,DLATEPERCENT,DLATEPERDAY,HBANK,DADJUSTMENT,CMINTHRESHOLD,DMINPERCENTAGE,iInvIsDue,CMAXTHRESHOLD,iProratio,DMAXPERCENTAGE,IBLOCKINVOICE,ISTARTPERIOD,hCPI2,dCPIPerc,iIndexMethod,iDecrease,iMethodOfPayment,iMonthsAgo,iDueDay,iLateFeeCalcBasis,dInxStep0,dInxStep1,dInxStep2,dInxStep3,dInxStep4,dInxStep5,dInxStep6,dInxStep7,dInxPercent0,dInxPercent1,dInxPercent2,dInxPercent3,dInxPercent4,dInxPercent5,dInxPercent6,dInxPercent7,iDueDayAfterMethod,iNextIncrease,iPrintInvoiceFirstTimeOnly,hLeaseCurrency,hParent1,iDirectDebit,iLeaseIsInvoiceCur,hCamCodePtr,hVendor,dLFFactor,sExtRef,iTaxpointDay,bPaymentSchedule,bVatIsNotNetCurrency,bCheckAnnually,iLICorrection,dArea,dPricePerArea,hCurExchRateType,bRoundToWholeNumbers,dLFAdditionalFee,hAmendment,dMonthlyAmount,dtInactive,bAnchorDeduction,bExcludeRecovery,cBaseAmount,cCeilingAmount,dAdminPercent,dFixedDenominator,dFixedSharePercent,dGrossUpPercent,dFixedNumerator,dRecoveryFactorPercent,dtBaseYearEnd,dtLastBilled,hAdminChargeCode,hDenominator,hExpensePool,hRecoveryGroup,hSalesType,iCeilingType,iDenominatorType,iScheduleType,iRecoveryType,hSchedule,dContractArea,bCumulative,dMinDenominatorPercent,bUseContractArea,bLocked,hgroup,hAmendmentInactive,bLastDayOfperiod,sSegment1,sSegment2,sSegment3,sSegment4,hOriginal,iCAPIncreaseBasis,iCAPIncreaseOverYr,dCAPIncreasePct,cFixedOffset,iFixedOffsetType,bRevisedBilling,AGI1_ApprovedPer,AGI2_dtApplied,AGI2_dtApproved,AGI2_dtEffective,AGI2_ApprovedPer,hLIChargeCode,iIncreaseType,dIncreasePct,iEstimatedRent,hPreviousCamrule,iCPIIncreaseType,dCPIIncreaseFactor,cOffsetReduction,bChargeLFOnUnpaid,iDaysInYear,bNaturalBreakpoint,isqftcol,bOffsetMultiplier,dOffsetMultiplier,bcc,hAnchorGroup,dtBaseMonth,iMandatoryIncrease,iNextIncreaseDue,dMinExchangeRate,bIncreaseAsPoints,bStepIndexation,iCapAppliesTo,hUserCreatedBy,dtCreated,hUserModifiedBy,dtLastModified,hOption,tRowVersion___cont___node.attribute('HMY').blank? ? 0 : node.attribute('HMY'),node.attribute('HCHARGECODE').blank? ? 0 : node.attribute('HCHARGECODE'),node.attribute('HTAXCTYPE').blank? ? 0 : node.attribute('HTAXCTYPE'),node.attribute('HCPI').blank? ? 0 : node.attribute('HCPI'),node.attribute('HTENANT').blank? ? 0 : node.attribute('HTENANT'),node.attribute('DTFROM').blank? ? '' : node.attribute('DTFROM').strip,node.attribute('DTTO').blank? ? '' : node.attribute('DTTO').strip,node.attribute('IESTIMATETYPE').blank? ? 0 : node.attribute('IESTIMATETYPE'),node.attribute('DESTIMATED').blank? ? 0 : node.attribute('DESTIMATED'),node.attribute('IMINTYPE').blank? ? 0 : node.attribute('IMINTYPE'),node.attribute('DMIN').blank? ? 0 : node.attribute('DMIN'),node.attribute('IMAXTYPE').blank? ? 0 : node.attribute('IMAXTYPE'),node.attribute('DMAX').blank? ? 0 : node.attribute('DMAX'),node.attribute('IPERIOD').blank? ? 0 : node.attribute('IPERIOD'),node.attribute('ITYPE').blank? ? 0 : node.attribute('ITYPE'),node.attribute('DPERCENT0').blank? ? 0 : node.attribute('DPERCENT0'),node.attribute('DPERCENT1').blank? ? 0 : node.attribute('DPERCENT1'),node.attribute('DPERCENT2').blank? ? 0 : node.attribute('DPERCENT2'),node.attribute('DPERCENT3').blank? ? 0 : node.attribute('DPERCENT3'),node.attribute('DPERCENT4').blank? ? 0 : node.attribute('DPERCENT4'),node.attribute('DPERCENT5').blank? ? 0 : node.attribute('DPERCENT5'),node.attribute('DPERCENT6').blank? ? 0 : node.attribute('DPERCENT6'),node.attribute('DPERCENT7').blank? ? 0 : node.attribute('DPERCENT7'),node.attribute('DPERCENT8').blank? ? 0 : node.attribute('DPERCENT8'),node.attribute('DSTEP0').blank? ? 0 : node.attribute('DSTEP0'),node.attribute('DSTEP1').blank? ? 0 : node.attribute('DSTEP1'),node.attribute('DSTEP2').blank? ? 0 : node.attribute('DSTEP2'),node.attribute('DSTEP3').blank? ? 0 : node.attribute('DSTEP3'),node.attribute('DSTEP4').blank? ? 0 : node.attribute('DSTEP4'),node.attribute('DSTEP5').blank? ? 0 : node.attribute('DSTEP5'),node.attribute('DSTEP6').blank? ? 0 : node.attribute('DSTEP6'),node.attribute('DSTEP7').blank? ? 0 : node.attribute('DSTEP7'),node.attribute('DSTEP8').blank? ? 0 : node.attribute('DSTEP8'),node.attribute('ISTEPTYPE0').blank? ? 0 : node.attribute('ISTEPTYPE0'),node.attribute('ISTEPTYPE1').blank? ? 0 : node.attribute('ISTEPTYPE1'),node.attribute('ISTEPTYPE2').blank? ? 0 : node.attribute('ISTEPTYPE2'),node.attribute('ISTEPTYPE3').blank? ? 0 : node.attribute('ISTEPTYPE3'),node.attribute('ISTEPTYPE4').blank? ? 0 : node.attribute('ISTEPTYPE4'),node.attribute('ISTEPTYPE5').blank? ? 0 : node.attribute('ISTEPTYPE5'),node.attribute('ISTEPTYPE6').blank? ? 0 : node.attribute('ISTEPTYPE6'),node.attribute('ISTEPTYPE7').blank? ? 0 : node.attribute('ISTEPTYPE7'),node.attribute('ISTEPTYPE8').blank? ? 0 : node.attribute('ISTEPTYPE8'),node.attribute('SGROUP').blank? ? '' : node.attribute('SGROUP').strip,node.attribute('DTAXRATE').blank? ? 0 : node.attribute('DTAXRATE'),node.attribute('SSITECREATEDBY').blank? ? '' : node.attribute('SSITECREATEDBY').strip,node.attribute('HSITECREATED').blank? ? 0 : node.attribute('HSITECREATED'),node.attribute('DFACTOR').blank? ? 0 : node.attribute('DFACTOR'),node.attribute('IMONTH').blank? ? 0 : node.attribute('IMONTH'),node.attribute('IINTERVAL').blank? ? 0 : node.attribute('IINTERVAL'),node.attribute('SPOSTCODE').blank? ? '' : node.attribute('SPOSTCODE').strip,node.attribute('NOTES').blank? ? '' : node.attribute('NOTES').strip,node.attribute('BASERULE').blank? ? 0 : node.attribute('BASERULE'),node.attribute('GROUPBP').blank? ? 0 : node.attribute('GROUPBP'),node.attribute('CUMULATIVE').blank? ? 0 : node.attribute('CUMULATIVE'),node.attribute('JAN').blank? ? 0 : node.attribute('JAN'),node.attribute('FEB').blank? ? 0 : node.attribute('FEB'),node.attribute('MAR').blank? ? 0 : node.attribute('MAR'),node.attribute('APR').blank? ? 0 : node.attribute('APR'),node.attribute('MAY').blank? ? 0 : node.attribute('MAY'),node.attribute('JUN').blank? ? 0 : node.attribute('JUN'),node.attribute('JUL').blank? ? 0 : node.attribute('JUL'),node.attribute('AUG').blank? ? 0 : node.attribute('AUG'),node.attribute('SEP').blank? ? 0 : node.attribute('SEP'),node.attribute('OCT').blank? ? 0 : node.attribute('OCT'),node.attribute('NOV').blank? ? 0 : node.attribute('NOV'),node.attribute('DEC_').blank? ? 0 : node.attribute('DEC_'),node.attribute('INTEREST').blank? ? 0 : node.attribute('INTEREST'),node.attribute('LATEFEE').blank? ? 0 : node.attribute('LATEFEE'),node.attribute('ITSQFT').blank? ? 0 : node.attribute('ITSQFT'),node.attribute('IPSQFT').blank? ? 0 : node.attribute('IPSQFT'),node.attribute('HFORMULA').blank? ? 0 : node.attribute('HFORMULA'),node.attribute('SFIELD0').blank? ? '' : node.attribute('SFIELD0').strip,node.attribute('SFIELD1').blank? ? '' : node.attribute('SFIELD1').strip,node.attribute('SFIELD2').blank? ? '' : node.attribute('SFIELD2').strip,node.attribute('SFIELD3').blank? ? '' : node.attribute('SFIELD3').strip,node.attribute('SFIELD4').blank? ? '' : node.attribute('SFIELD4').strip,node.attribute('SFIELD5').blank? ? '' : node.attribute('SFIELD5').strip,node.attribute('SFIELD6').blank? ? '' : node.attribute('SFIELD6').strip,node.attribute('SFIELD7').blank? ? '' : node.attribute('SFIELD7').strip,node.attribute('SFIELD8').blank? ? '' : node.attribute('SFIELD8').strip,node.attribute('SFIELD9').blank? ? '' : node.attribute('SFIELD9').strip,node.attribute('SFIELD10').blank? ? '' : node.attribute('SFIELD10').strip,node.attribute('SFIELD11').blank? ? '' : node.attribute('SFIELD11').strip,node.attribute('SFIELD12').blank? ? '' : node.attribute('SFIELD12').strip,node.attribute('SFIELD13').blank? ? '' : node.attribute('SFIELD13').strip,node.attribute('SFIELD14').blank? ? '' : node.attribute('SFIELD14').strip,node.attribute('SFIELD15').blank? ? '' : node.attribute('SFIELD15').strip,node.attribute('SFIELD16').blank? ? '' : node.attribute('SFIELD16').strip,node.attribute('SFIELD17').blank? ? '' : node.attribute('SFIELD17').strip,node.attribute('SFIELD18').blank? ? '' : node.attribute('SFIELD18').strip,node.attribute('SFIELD19').blank? ? '' : node.attribute('SFIELD19').strip,node.attribute('bHold').blank? ? 0 : node.attribute('bHold'),node.attribute('bACH').blank? ? 0 : node.attribute('bACH'),node.attribute('dtACHPosted').blank? ? '' : node.attribute('dtACHPosted').strip,node.attribute('iMaxPerMo').blank? ? 0 : node.attribute('iMaxPerMo'),node.attribute('iCtPerMo').blank? ? 0 : node.attribute('iCtPerMo'),node.attribute('dPdSoFar').blank? ? 0 : node.attribute('dPdSoFar'),node.attribute('hAcctTreeDetail').blank? ? 0 : node.attribute('hAcctTreeDetail'),node.attribute('iAmountPeriod').blank? ? 0 : node.attribute('iAmountPeriod'),node.attribute('hUnit').blank? ? 0 : node.attribute('hUnit'),node.attribute('hProp').blank? ? 0 : node.attribute('hProp'),node.attribute('DTINCREASE').blank? ? '' : node.attribute('DTINCREASE').strip,node.attribute('IINVFREQUENCY').blank? ? 0 : node.attribute('IINVFREQUENCY'),node.attribute('IBILLDAY').blank? ? 0 : node.attribute('IBILLDAY'),node.attribute('HTRANTYPE').blank? ? 0 : node.attribute('HTRANTYPE'),node.attribute('IBILLINARREARS').blank? ? 0 : node.attribute('IBILLINARREARS'),node.attribute('ILATEGRACE').blank? ? 0 : node.attribute('ILATEGRACE'),node.attribute('IINTERESTFREE').blank? ? 0 : node.attribute('IINTERESTFREE'),node.attribute('ILATETYPE').blank? ? 0 : node.attribute('ILATETYPE'),node.attribute('DLATEPERCENT').blank? ? 0 : node.attribute('DLATEPERCENT'),node.attribute('DLATEPERDAY').blank? ? 0 : node.attribute('DLATEPERDAY'),node.attribute('HBANK').blank? ? 0 : node.attribute('HBANK'),node.attribute('DADJUSTMENT').blank? ? 0 : node.attribute('DADJUSTMENT'),node.attribute('CMINTHRESHOLD').blank? ? 0 : node.attribute('CMINTHRESHOLD'),node.attribute('DMINPERCENTAGE').blank? ? 0 : node.attribute('DMINPERCENTAGE'),node.attribute('iInvIsDue').blank? ? 0 : node.attribute('iInvIsDue'),node.attribute('CMAXTHRESHOLD').blank? ? 0 : node.attribute('CMAXTHRESHOLD'),node.attribute('iProratio').blank? ? 0 : node.attribute('iProratio'),node.attribute('DMAXPERCENTAGE').blank? ? 0 : node.attribute('DMAXPERCENTAGE'),node.attribute('IBLOCKINVOICE').blank? ? 0 : node.attribute('IBLOCKINVOICE'),node.attribute('ISTARTPERIOD').blank? ? 0 : node.attribute('ISTARTPERIOD'),node.attribute('hCPI2').blank? ? 0 : node.attribute('hCPI2'),node.attribute('dCPIPerc').blank? ? 0 : node.attribute('dCPIPerc'),node.attribute('iIndexMethod').blank? ? 0 : node.attribute('iIndexMethod'),node.attribute('iDecrease').blank? ? 0 : node.attribute('iDecrease'),node.attribute('iMethodOfPayment').blank? ? 0 : node.attribute('iMethodOfPayment'),node.attribute('iMonthsAgo').blank? ? 0 : node.attribute('iMonthsAgo'),node.attribute('iDueDay').blank? ? 0 : node.attribute('iDueDay'),node.attribute('iLateFeeCalcBasis').blank? ? 0 : node.attribute('iLateFeeCalcBasis'),node.attribute('dInxStep0').blank? ? 0 : node.attribute('dInxStep0'),node.attribute('dInxStep1').blank? ? 0 : node.attribute('dInxStep1'),node.attribute('dInxStep2').blank? ? 0 : node.attribute('dInxStep2'),node.attribute('dInxStep3').blank? ? 0 : node.attribute('dInxStep3'),node.attribute('dInxStep4').blank? ? 0 : node.attribute('dInxStep4'),node.attribute('dInxStep5').blank? ? 0 : node.attribute('dInxStep5'),node.attribute('dInxStep6').blank? ? 0 : node.attribute('dInxStep6'),node.attribute('dInxStep7').blank? ? 0 : node.attribute('dInxStep7'),node.attribute('dInxPercent0').blank? ? 0 : node.attribute('dInxPercent0'),node.attribute('dInxPercent1').blank? ? 0 : node.attribute('dInxPercent1'),node.attribute('dInxPercent2').blank? ? 0 : node.attribute('dInxPercent2'),node.attribute('dInxPercent3').blank? ? 0 : node.attribute('dInxPercent3'),node.attribute('dInxPercent4').blank? ? 0 : node.attribute('dInxPercent4'),node.attribute('dInxPercent5').blank? ? 0 : node.attribute('dInxPercent5'),node.attribute('dInxPercent6').blank? ? 0 : node.attribute('dInxPercent6'),node.attribute('dInxPercent7').blank? ? 0 : node.attribute('dInxPercent7'),node.attribute('iDueDayAfterMethod').blank? ? 0 : node.attribute('iDueDayAfterMethod'),node.attribute('iNextIncrease').blank? ? 0 : node.attribute('iNextIncrease'),node.attribute('iPrintInvoiceFirstTimeOnly').blank? ? 0 : node.attribute('iPrintInvoiceFirstTimeOnly'),node.attribute('hLeaseCurrency').blank? ? 0 : node.attribute('hLeaseCurrency'),node.attribute('hParent1').blank? ? 0 : node.attribute('hParent1'),node.attribute('iDirectDebit').blank? ? 0 : node.attribute('iDirectDebit'),node.attribute('iLeaseIsInvoiceCur').blank? ? 0 : node.attribute('iLeaseIsInvoiceCur'),node.attribute('hCamCodePtr').blank? ? 0 : node.attribute('hCamCodePtr'),node.attribute('hVendor').blank? ? 0 : node.attribute('hVendor'),node.attribute('dLFFactor').blank? ? 0 : node.attribute('dLFFactor'),node.attribute('sExtRef').blank? ? '' : node.attribute('sExtRef').strip,node.attribute('iTaxpointDay').blank? ? 0 : node.attribute('iTaxpointDay'),node.attribute('bPaymentSchedule').blank? ? 0 : node.attribute('bPaymentSchedule'),node.attribute('bVatIsNotNetCurrency').blank? ? 0 : node.attribute('bVatIsNotNetCurrency'),node.attribute('bCheckAnnually').blank? ? 0 : node.attribute('bCheckAnnually'),node.attribute('iLICorrection').blank? ? 0 : node.attribute('iLICorrection'),node.attribute('dArea').blank? ? 0 : node.attribute('dArea'),node.attribute('dPricePerArea').blank? ? 0 : node.attribute('dPricePerArea'),node.attribute('hCurExchRateType').blank? ? 0 : node.attribute('hCurExchRateType'),node.attribute('bRoundToWholeNumbers').blank? ? 0 : node.attribute('bRoundToWholeNumbers'),node.attribute('dLFAdditionalFee').blank? ? 0 : node.attribute('dLFAdditionalFee'),node.attribute('hAmendment').blank? ? 0 : node.attribute('hAmendment'),node.attribute('dMonthlyAmount').blank? ? 0 : node.attribute('dMonthlyAmount'),node.attribute('dtInactive').blank? ? '' : node.attribute('dtInactive').strip,node.attribute('bAnchorDeduction').blank? ? 0 : node.attribute('bAnchorDeduction'),node.attribute('bExcludeRecovery').blank? ? 0 : node.attribute('bExcludeRecovery'),node.attribute('cBaseAmount').blank? ? 0 : node.attribute('cBaseAmount'),node.attribute('cCeilingAmount').blank? ? 0 : node.attribute('cCeilingAmount'),node.attribute('dAdminPercent').blank? ? 0 : node.attribute('dAdminPercent'),node.attribute('dFixedDenominator').blank? ? 0 : node.attribute('dFixedDenominator'),node.attribute('dFixedSharePercent').blank? ? 0 : node.attribute('dFixedSharePercent'),node.attribute('dGrossUpPercent').blank? ? 0 : node.attribute('dGrossUpPercent'),node.attribute('dFixedNumerator').blank? ? 0 : node.attribute('dFixedNumerator'),node.attribute('dRecoveryFactorPercent').blank? ? 0 : node.attribute('dRecoveryFactorPercent'),node.attribute('dtBaseYearEnd').blank? ? '' : node.attribute('dtBaseYearEnd').strip,node.attribute('dtLastBilled').blank? ? '' : node.attribute('dtLastBilled').strip,node.attribute('hAdminChargeCode').blank? ? 0 : node.attribute('hAdminChargeCode'),node.attribute('hDenominator').blank? ? 0 : node.attribute('hDenominator'),node.attribute('hExpensePool').blank? ? 0 : node.attribute('hExpensePool'),node.attribute('hRecoveryGroup').blank? ? 0 : node.attribute('hRecoveryGroup'),node.attribute('hSalesType').blank? ? 0 : node.attribute('hSalesType'),node.attribute('iCeilingType').blank? ? 0 : node.attribute('iCeilingType'),node.attribute('iDenominatorType').blank? ? 0 : node.attribute('iDenominatorType'),node.attribute('iScheduleType').blank? ? 0 : node.attribute('iScheduleType'),node.attribute('iRecoveryType').blank? ? 0 : node.attribute('iRecoveryType'),node.attribute('hSchedule').blank? ? 0 : node.attribute('hSchedule'),node.attribute('dContractArea').blank? ? 0 : node.attribute('dContractArea'),node.attribute('bCumulative').blank? ? 0 : node.attribute('bCumulative'),node.attribute('dMinDenominatorPercent').blank? ? 0 : node.attribute('dMinDenominatorPercent'),node.attribute('bUseContractArea').blank? ? 0 : node.attribute('bUseContractArea'),node.attribute('bLocked').blank? ? 0 : node.attribute('bLocked'),node.attribute('hgroup').blank? ? 0 : node.attribute('hgroup'),node.attribute('hAmendmentInactive').blank? ? 0 : node.attribute('hAmendmentInactive'),node.attribute('bLastDayOfperiod').blank? ? 0 : node.attribute('bLastDayOfperiod'),node.attribute('sSegment1').blank? ? '' : node.attribute('sSegment1').strip,node.attribute('sSegment2').blank? ? '' : node.attribute('sSegment2').strip,node.attribute('sSegment3').blank? ? '' : node.attribute('sSegment3').strip,node.attribute('sSegment4').blank? ? '' : node.attribute('sSegment4').strip,node.attribute('hOriginal').blank? ? 0 : node.attribute('hOriginal'),node.attribute('iCAPIncreaseBasis').blank? ? 0 : node.attribute('iCAPIncreaseBasis'),node.attribute('iCAPIncreaseOverYr').blank? ? 0 : node.attribute('iCAPIncreaseOverYr'),node.attribute('dCAPIncreasePct').blank? ? 0 : node.attribute('dCAPIncreasePct'),node.attribute('cFixedOffset').blank? ? 0 : node.attribute('cFixedOffset'),node.attribute('iFixedOffsetType').blank? ? 0 : node.attribute('iFixedOffsetType'),node.attribute('bRevisedBilling').blank? ? 0 : node.attribute('bRevisedBilling'),node.attribute('AGI1_ApprovedPer').blank? ? 0 : node.attribute('AGI1_ApprovedPer'),node.attribute('AGI2_dtApplied').blank? ? '' : node.attribute('AGI2_dtApplied').strip,node.attribute('AGI2_dtApproved').blank? ? '' : node.attribute('AGI2_dtApproved').strip,node.attribute('AGI2_dtEffective').blank? ? '' : node.attribute('AGI2_dtEffective').strip,node.attribute('AGI2_ApprovedPer').blank? ? 0 : node.attribute('AGI2_ApprovedPer'),node.attribute('hLIChargeCode').blank? ? 0 : node.attribute('hLIChargeCode'),node.attribute('iIncreaseType').blank? ? 0 : node.attribute('iIncreaseType'),node.attribute('dIncreasePct').blank? ? 0 : node.attribute('dIncreasePct'),node.attribute('iEstimatedRent').blank? ? 0 : node.attribute('iEstimatedRent'),node.attribute('hPreviousCamrule').blank? ? 0 : node.attribute('hPreviousCamrule'),node.attribute('iCPIIncreaseType').blank? ? 0 : node.attribute('iCPIIncreaseType'),node.attribute('dCPIIncreaseFactor').blank? ? 0 : node.attribute('dCPIIncreaseFactor'),node.attribute('cOffsetReduction').blank? ? 0 : node.attribute('cOffsetReduction'),node.attribute('bChargeLFOnUnpaid').blank? ? 0 : node.attribute('bChargeLFOnUnpaid'),node.attribute('iDaysInYear').blank? ? 0 : node.attribute('iDaysInYear'),node.attribute('bNaturalBreakpoint').blank? ? 0 : node.attribute('bNaturalBreakpoint'),node.attribute('isqftcol').blank? ? 0 : node.attribute('isqftcol'),node.attribute('bOffsetMultiplier').blank? ? 0 : node.attribute('bOffsetMultiplier'),node.attribute('dOffsetMultiplier').blank? ? 0 : node.attribute('dOffsetMultiplier'),node.attribute('bcc').blank? ? 0 : node.attribute('bcc'),node.attribute('hAnchorGroup').blank? ? 0 : node.attribute('hAnchorGroup'),node.attribute('dtBaseMonth').blank? ? '' : node.attribute('dtBaseMonth').strip,node.attribute('iMandatoryIncrease').blank? ? 0 : node.attribute('iMandatoryIncrease'),node.attribute('iNextIncreaseDue').blank? ? 0 : node.attribute('iNextIncreaseDue'),node.attribute('dMinExchangeRate').blank? ? 0 : node.attribute('dMinExchangeRate'),node.attribute('bIncreaseAsPoints').blank? ? 0 : node.attribute('bIncreaseAsPoints'),node.attribute('bStepIndexation').blank? ? 0 : node.attribute('bStepIndexation'),node.attribute('iCapAppliesTo').blank? ? 0 : node.attribute('iCapAppliesTo'),node.attribute('hUserCreatedBy').blank? ? 0 : node.attribute('hUserCreatedBy'),node.attribute('dtCreated').blank? ? '' : node.attribute('dtCreated').strip,node.attribute('hUserModifiedBy').blank? ? 0 : node.attribute('hUserModifiedBy'),node.attribute('dtLastModified').blank? ? '' : node.attribute('dtLastModified').strip,node.attribute('hOption').blank? ? 0 : node.attribute('hOption'),node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['chargtyp'] = "chargtyp___cont___HMY,HCHARGEBACKACCT,SCODE,SNAME,ITAX,ITYPE,HSUMMARY,SACCTRANGE,HCHART,iSubsidy,bNoAutoApply,HDEFACCT,sSegment1,sSegment2,sSegment3,sSegment4,BESTATECHARGE,bLiabilityCharge,bCorporateCharge,hTrueUpCharge,hVoidCharge,hCappingCharge,hRecoveryCharge,hInterestCharge,MPACCODE,iSubType,hOffset,hRentIncCharge,tRowVersion___cont___node.attribute('HMY').blank? ? 0 : node.attribute('HMY'),node.attribute('HCHARGEBACKACCT').blank? ? 0 : node.attribute('HCHARGEBACKACCT'),node.attribute('SCODE').blank? ? '' : node.attribute('SCODE').strip,node.attribute('SNAME').blank? ? '' : node.attribute('SNAME').strip,node.attribute('ITAX').blank? ? 0 : node.attribute('ITAX'),node.attribute('ITYPE').blank? ? 0 : node.attribute('ITYPE'),node.attribute('HSUMMARY').blank? ? 0 : node.attribute('HSUMMARY'),node.attribute('SACCTRANGE').blank? ? '' : node.attribute('SACCTRANGE').strip,node.attribute('HCHART').blank? ? 0 : node.attribute('HCHART'),node.attribute('iSubsidy').blank? ? 0 : node.attribute('iSubsidy'),node.attribute('bNoAutoApply').blank? ? 0 : node.attribute('bNoAutoApply'),node.attribute('HDEFACCT').blank? ? 0 : node.attribute('HDEFACCT'),node.attribute('sSegment1').blank? ? '' : node.attribute('sSegment1').strip,node.attribute('sSegment2').blank? ? '' : node.attribute('sSegment2').strip,node.attribute('sSegment3').blank? ? '' : node.attribute('sSegment3').strip,node.attribute('sSegment4').blank? ? '' : node.attribute('sSegment4').strip,node.attribute('BESTATECHARGE').blank? ? 0 : node.attribute('BESTATECHARGE'),node.attribute('bLiabilityCharge').blank? ? 0 : node.attribute('bLiabilityCharge'),node.attribute('bCorporateCharge').blank? ? 0 : node.attribute('bCorporateCharge'),node.attribute('hTrueUpCharge').blank? ? 0 : node.attribute('hTrueUpCharge'),node.attribute('hVoidCharge').blank? ? 0 : node.attribute('hVoidCharge'),node.attribute('hCappingCharge').blank? ? 0 : node.attribute('hCappingCharge'),node.attribute('hRecoveryCharge').blank? ? 0 : node.attribute('hRecoveryCharge'),node.attribute('hInterestCharge').blank? ? 0 : node.attribute('hInterestCharge'),node.attribute('MPACCODE').blank? ? '' : node.attribute('MPACCODE').strip,node.attribute('iSubType').blank? ? 0 : node.attribute('iSubType'),node.attribute('hOffset').blank? ? 0 : node.attribute('hOffset'),node.attribute('hRentIncCharge').blank? ? 0 : node.attribute('hRentIncCharge'),node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['person'] = "person___cont___HMY,UCODE,IPERSONTYPE,ULASTNAME,SFIRSTNAME,SSALUTATION,SADDR1,SADDR2,SCITY,SSTATE,SZIPCODE,SEXTRAADDRLINE,SPHONENUM0,SPHONENUM1,SPHONENUM2,SPHONENUM3,SPHONENUM4,SPHONENUM5,SPHONENUM6,SPHONENUM7,SPHONENUM8,SPHONENUM9,SFEDID,SFEDNAME,BGETS1099,SCHECKMEMO,UP_LASTNAME,SEMAIL,SURL,SMAINTNOTES,sAddr3,sAddr4,sCountry,bACH,hcountry,sMicrCode,sMiddleName,bgetsT5018,sEmail2,hPreflanguage,hUserCreatedBy,hUserModifiedBy,dtCreated,dtLastModified,sExtReference,hForeigndb,tRowVersion___cont___node.attribute('HMY').blank? ? 0 : node.attribute('HMY'),node.attribute('UCODE').blank? ? '' : node.attribute('UCODE').strip,node.attribute('IPERSONTYPE').blank? ? 0 : node.attribute('IPERSONTYPE'),node.attribute('ULASTNAME').blank? ? '' : node.attribute('ULASTNAME').strip,node.attribute('SFIRSTNAME').blank? ? '' : node.attribute('SFIRSTNAME').strip,node.attribute('SSALUTATION').blank? ? '' : node.attribute('SSALUTATION').strip,node.attribute('SADDR1').blank? ? '' : node.attribute('SADDR1').strip,node.attribute('SADDR2').blank? ? '' : node.attribute('SADDR2').strip,node.attribute('SCITY').blank? ? '' : node.attribute('SCITY').strip,node.attribute('SSTATE').blank? ? '' : node.attribute('SSTATE').strip,node.attribute('SZIPCODE').blank? ? '' : node.attribute('SZIPCODE').strip,node.attribute('SEXTRAADDRLINE').blank? ? '' : node.attribute('SEXTRAADDRLINE').strip,node.attribute('SPHONENUM0').blank? ? '' : node.attribute('SPHONENUM0').strip,node.attribute('SPHONENUM1').blank? ? '' : node.attribute('SPHONENUM1').strip,node.attribute('SPHONENUM2').blank? ? '' : node.attribute('SPHONENUM2').strip,node.attribute('SPHONENUM3').blank? ? '' : node.attribute('SPHONENUM3').strip,node.attribute('SPHONENUM4').blank? ? '' : node.attribute('SPHONENUM4').strip,node.attribute('SPHONENUM5').blank? ? '' : node.attribute('SPHONENUM5').strip,node.attribute('SPHONENUM6').blank? ? '' : node.attribute('SPHONENUM6').strip,node.attribute('SPHONENUM7').blank? ? '' : node.attribute('SPHONENUM7').strip,node.attribute('SPHONENUM8').blank? ? '' : node.attribute('SPHONENUM8').strip,node.attribute('SPHONENUM9').blank? ? '' : node.attribute('SPHONENUM9').strip,node.attribute('SFEDID').blank? ? '' : node.attribute('SFEDID').strip,node.attribute('SFEDNAME').blank? ? '' : node.attribute('SFEDNAME').strip,node.attribute('BGETS1099').blank? ? 0 : node.attribute('BGETS1099'),node.attribute('SCHECKMEMO').blank? ? '' : node.attribute('SCHECKMEMO').strip,node.attribute('UP_LASTNAME').blank? ? '' : node.attribute('UP_LASTNAME').strip,node.attribute('SEMAIL').blank? ? '' : node.attribute('SEMAIL').strip,node.attribute('SURL').blank? ? '' : node.attribute('SURL').strip,node.attribute('SMAINTNOTES').blank? ? '' : node.attribute('SMAINTNOTES').strip,node.attribute('sAddr3').blank? ? '' : node.attribute('sAddr3').strip,node.attribute('sAddr4').blank? ? '' : node.attribute('sAddr4').strip,node.attribute('sCountry').blank? ? '' : node.attribute('sCountry').strip,node.attribute('bACH').blank? ? 0 : node.attribute('bACH'),node.attribute('hcountry').blank? ? 0 : node.attribute('hcountry'),node.attribute('sMicrCode').blank? ? '' : node.attribute('sMicrCode').strip,node.attribute('sMiddleName').blank? ? '' : node.attribute('sMiddleName').strip,node.attribute('bgetsT5018').blank? ? 0 : node.attribute('bgetsT5018'),node.attribute('sEmail2').blank? ? '' : node.attribute('sEmail2').strip,node.attribute('hPreflanguage').blank? ? 0 : node.attribute('hPreflanguage'),node.attribute('hUserCreatedBy').blank? ? 0 : node.attribute('hUserCreatedBy'),node.attribute('hUserModifiedBy').blank? ? 0 : node.attribute('hUserModifiedBy'),node.attribute('dtCreated').blank? ? '' : node.attribute('dtCreated').strip,node.attribute('dtLastModified').blank? ? '' : node.attribute('dtLastModified').strip,node.attribute('sExtReference').blank? ? '' : node.attribute('sExtReference').strip,node.attribute('hForeigndb').blank? ? 0 : node.attribute('hForeigndb'),node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['UnitType'] = "UnitType___cont___HMY,SCODE,HPROPERTY,SDESC,SRENT,SDEPOSIT,DSQFT,SFIELD0,SFIELD1,SFIELD2,SFIELD3,dtStamp,iBeds,iBaths,dMinRent,dMaxRent,tRowVersion___cont___node.attribute('HMY').blank? ? 0 : node.attribute('HMY'),node.attribute('SCODE').blank? ? '' : node.attribute('SCODE').strip,node.attribute('HPROPERTY').blank? ? 0 : node.attribute('HPROPERTY'),node.attribute('SDESC').blank? ? '' : node.attribute('SDESC').strip,node.attribute('SRENT').blank? ? 0 : node.attribute('SRENT'),node.attribute('SDEPOSIT').blank? ? 0 : node.attribute('SDEPOSIT'),node.attribute('DSQFT').blank? ? 0 : node.attribute('DSQFT'),node.attribute('SFIELD0').blank? ? '' : node.attribute('SFIELD0').strip,node.attribute('SFIELD1').blank? ? '' : node.attribute('SFIELD1').strip,node.attribute('SFIELD2').blank? ? '' : node.attribute('SFIELD2').strip,node.attribute('SFIELD3').blank? ? '' : node.attribute('SFIELD3').strip,node.attribute('dtStamp').blank? ? '' : node.attribute('dtStamp').strip,node.attribute('iBeds').blank? ? 0 : node.attribute('iBeds'),node.attribute('iBaths').blank? ? 0 : node.attribute('iBaths'),node.attribute('dMinRent').blank? ? 0 : node.attribute('dMinRent'),node.attribute('dMaxRent').blank? ? 0 : node.attribute('dMaxRent'),node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['tenantaging'] = "tenantaging___cont___hMy,hTenant,dtPeriod,dtTimeStamp,cBegBal,cEndBal,cMTDcharges,cMTDreceipts,cAge30,cAge60,cAge90,cAgeOver90,cBegBalRent,cEndBalRent,cMTDchargesRent,cMTDreceiptsRent,cAge30Rent,cAge60Rent,cAge90Rent,cAgeOver90Rent,cPrepays,sNotes,hChargecode,hARacct,bRecalc,dtAgeAsOf,hETLLog,tRowVersion___cont___node.attribute('hMy').blank? ? 0 : node.attribute('hMy'),node.attribute('hTenant').blank? ? 0 : node.attribute('hTenant'),node.attribute('dtPeriod').blank? ? '' : node.attribute('dtPeriod').strip,node.attribute('dtTimeStamp').blank? ? '' : node.attribute('dtTimeStamp').strip,node.attribute('cBegBal').blank? ? 0 : node.attribute('cBegBal'),node.attribute('cEndBal').blank? ? 0 : node.attribute('cEndBal'),node.attribute('cMTDcharges').blank? ? 0 : node.attribute('cMTDcharges'),node.attribute('cMTDreceipts').blank? ? 0 : node.attribute('cMTDreceipts'),node.attribute('cAge30').blank? ? 0 : node.attribute('cAge30'),node.attribute('cAge60').blank? ? 0 : node.attribute('cAge60'),node.attribute('cAge90').blank? ? 0 : node.attribute('cAge90'),node.attribute('cAgeOver90').blank? ? 0 : node.attribute('cAgeOver90'),node.attribute('cBegBalRent').blank? ? 0 : node.attribute('cBegBalRent'),node.attribute('cEndBalRent').blank? ? 0 : node.attribute('cEndBalRent'),node.attribute('cMTDchargesRent').blank? ? 0 : node.attribute('cMTDchargesRent'),node.attribute('cMTDreceiptsRent').blank? ? 0 : node.attribute('cMTDreceiptsRent'),node.attribute('cAge30Rent').blank? ? 0 : node.attribute('cAge30Rent'),node.attribute('cAge60Rent').blank? ? 0 : node.attribute('cAge60Rent'),node.attribute('cAge90Rent').blank? ? 0 : node.attribute('cAge90Rent'),node.attribute('cAgeOver90Rent').blank? ? 0 : node.attribute('cAgeOver90Rent'),node.attribute('cPrepays').blank? ? 0 : node.attribute('cPrepays'),node.attribute('sNotes').blank? ? '' : node.attribute('sNotes').strip,node.attribute('hChargecode').blank? ? 0 : node.attribute('hChargecode'),node.attribute('hARacct').blank? ? 0 : node.attribute('hARacct'),node.attribute('bRecalc').blank? ? 0 : node.attribute('bRecalc'),node.attribute('dtAgeAsOf').blank? ? '' : node.attribute('dtAgeAsOf').strip,node.attribute('hETLLog').blank? ? 0 : node.attribute('hETLLog'),node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['tenant'] = "tenant___cont___HMYPERSON,SCODE,HAPPLICANT,SLASTNAME,HPROPERTY,SUNITCODE,ISTATUS,SFIRSTNAME,SSALUTATION,SADDR1,SADDR2,SCITY,SSTATE,SZIPCODE,SEXTRAADDRLINE,SFEDID,DTLEASEFROM,BGETS1099,SLATEMIN,SLATEPERDAY,SRENT,IDUEDAY,DTMOVEIN,DTMOVEOUT,DTPAIDTO,DTNOTICE,DTLEASETO,SLASTMONTH,ILATETYPE,ILATEGRACE,DLATEPERCENT,DINTEREST,IRENTINCMETHOD,SLEASENAME,SLEASECOMPANY,SLEASEADDR1,SLEASEADDR2,SLEASECITY,SLEASESTATE,SLEASEZIPCODE,SLEASEBUSTYPE,DLEASEGROSSSQFT,DLEASENETSQFT,DLEASEPERCENTSQFT,ILEASEOVGMONTH,BLEASEPAYRENT,SLEASEFIELD10,SLEASEFIELD11,SLEASEFIELD12,SLEASEFIELD13,SLEASEFIELD14,SLEASEFIELD15,SLEASEFIELD16,SLEASEFIELD20,SLEASEFIELD21,SLEASEFIELD22,SLEASEFIELD23,SLEASEFIELD24,SLEASEFIELD25,SLEASEFIELD26,SLEASEFIELD30,SLEASEFIELD31,SLEASEFIELD32,SLEASEFIELD33,SLEASEFIELD34,SLEASEFIELD35,SLEASEFIELD36,SDEPOSIT0,SDEPOSIT1,SDEPOSIT2,SDEPOSIT3,SDEPOSIT4,SDEPOSIT5,SDEPOSIT6,SDEPOSIT7,SDEPOSIT8,SDEPOSIT9,SFIELDS0,SFIELDS1,SFIELDS2,SFIELDS3,SFIELDS4,SFIELDS5,SFIELDS6,SFIELDS7,SFIELDS8,SFIELDS9,SFIELDS10,SFIELDS11,SFIELDS12,SFIELDS13,SPHONENUM0,SPHONENUM1,SPHONENUM2,SPHONENUM3,SPHONENUM4,SPHONENUM5,SPHONENUM6,SPHONENUM7,SPHONENUM8,SPHONENUM9,DTRENEWDATE,DTSIGNDATE,IREASON,BSEPINC,HBILLTOTENANT,HUNIT,BBASEREL,PUTCODE,BSUBSIDIZED,SDFITRANSIT,SDFIACCTNO,SACCTNAME,BCOMMERCIAL,BCHECKING,BNOPAYMENTS,BNORENT,SEMAIL,SURL,SMAINTNOTES,hCountry,hLeaseCountry,sLeaseAddr3,bApplicant,iNSFCount,iLateCount,bMTCSSubsidized,BMOVEDOUT,dtStamp,sMiddleName,hProspect,hMaintBillTo,iLateGrace2,dLateAmt2,dLatePercent2,dLateAmtMax,dLatePercentMax,iLateDaysMax,iLateType2,iLateTypeMax,dLateMinDueAmt,dtCancelMoveIn,dtCancelNotice,dtMRdy,iLeaseType,hCustomer,bACHOptOut,iNoticeType,bAch,bNonResident,sEmail2,bEmployeeUnit,hBillCurrency,hLeaseCurrency,iBlockInvoice,dtContractEndDate,iMethodOfPayment,hTranType,hCurExchRateType,IINTERESTFREE,DLATEPERDAY,HBANK,DADJUSTMENT,CMINTHRESHOLD,CMAXTHRESHOLD,DMINPERCENTAGE,DMAXPERCENTAGE,ILATEFEECALCBASIS,hVendor,sRegNum,dPropTaxRecovery,dLFFactor,dLFAdditionalFee,iType,sWebsite,dContractArea,hUserCreatedBy,hUserModifiedBy,dtCreated,dtLastModified,HRule,dtAnniversary,dtLiability,dtInterestPost,DTotalCharges,bMTM,hRoom,hBed,iLeaseTerm,sBedCode,sRoomCode,bBillToCustomer,bRGI,hForeigndb,sExtReference,dtResponsibility,dLastIntPaid,sFedIdSecure,tRowVersion___cont___node.attribute('HMYPERSON').blank? ? 0 : node.attribute('HMYPERSON'),node.attribute('SCODE').blank? ? '' : node.attribute('SCODE').strip,node.attribute('HAPPLICANT').blank? ? 0 : node.attribute('HAPPLICANT'),node.attribute('SLASTNAME').blank? ? '' : node.attribute('SLASTNAME').strip,node.attribute('HPROPERTY').blank? ? 0 : node.attribute('HPROPERTY'),node.attribute('SUNITCODE').blank? ? '' : node.attribute('SUNITCODE').strip,node.attribute('ISTATUS').blank? ? 0 : node.attribute('ISTATUS'),node.attribute('SFIRSTNAME').blank? ? '' : node.attribute('SFIRSTNAME').strip,node.attribute('SSALUTATION').blank? ? '' : node.attribute('SSALUTATION').strip,node.attribute('SADDR1').blank? ? '' : node.attribute('SADDR1').strip,node.attribute('SADDR2').blank? ? '' : node.attribute('SADDR2').strip,node.attribute('SCITY').blank? ? '' : node.attribute('SCITY').strip,node.attribute('SSTATE').blank? ? '' : node.attribute('SSTATE').strip,node.attribute('SZIPCODE').blank? ? '' : node.attribute('SZIPCODE').strip,node.attribute('SEXTRAADDRLINE').blank? ? '' : node.attribute('SEXTRAADDRLINE').strip,node.attribute('SFEDID').blank? ? '' : node.attribute('SFEDID').strip,node.attribute('DTLEASEFROM').blank? ? '' : node.attribute('DTLEASEFROM').strip,node.attribute('BGETS1099').blank? ? 0 : node.attribute('BGETS1099'),node.attribute('SLATEMIN').blank? ? 0 : node.attribute('SLATEMIN'),node.attribute('SLATEPERDAY').blank? ? 0 : node.attribute('SLATEPERDAY'),node.attribute('SRENT').blank? ? 0 : node.attribute('SRENT'),node.attribute('IDUEDAY').blank? ? 0 : node.attribute('IDUEDAY'),node.attribute('DTMOVEIN').blank? ? '' : node.attribute('DTMOVEIN').strip,node.attribute('DTMOVEOUT').blank? ? '' : node.attribute('DTMOVEOUT').strip,node.attribute('DTPAIDTO').blank? ? '' : node.attribute('DTPAIDTO').strip,node.attribute('DTNOTICE').blank? ? '' : node.attribute('DTNOTICE').strip,node.attribute('DTLEASETO').blank? ? '' : node.attribute('DTLEASETO').strip,node.attribute('SLASTMONTH').blank? ? 0 : node.attribute('SLASTMONTH'),node.attribute('ILATETYPE').blank? ? 0 : node.attribute('ILATETYPE'),node.attribute('ILATEGRACE').blank? ? 0 : node.attribute('ILATEGRACE'),node.attribute('DLATEPERCENT').blank? ? 0 : node.attribute('DLATEPERCENT'),node.attribute('DINTEREST').blank? ? 0 : node.attribute('DINTEREST'),node.attribute('IRENTINCMETHOD').blank? ? 0 : node.attribute('IRENTINCMETHOD'),node.attribute('SLEASENAME').blank? ? '' : node.attribute('SLEASENAME').strip,node.attribute('SLEASECOMPANY').blank? ? '' : node.attribute('SLEASECOMPANY').strip,node.attribute('SLEASEADDR1').blank? ? '' : node.attribute('SLEASEADDR1').strip,node.attribute('SLEASEADDR2').blank? ? '' : node.attribute('SLEASEADDR2').strip,node.attribute('SLEASECITY').blank? ? '' : node.attribute('SLEASECITY').strip,node.attribute('SLEASESTATE').blank? ? '' : node.attribute('SLEASESTATE').strip,node.attribute('SLEASEZIPCODE').blank? ? '' : node.attribute('SLEASEZIPCODE').strip,node.attribute('SLEASEBUSTYPE').blank? ? '' : node.attribute('SLEASEBUSTYPE').strip,node.attribute('DLEASEGROSSSQFT').blank? ? 0 : node.attribute('DLEASEGROSSSQFT'),node.attribute('DLEASENETSQFT').blank? ? 0 : node.attribute('DLEASENETSQFT'),node.attribute('DLEASEPERCENTSQFT').blank? ? 0 : node.attribute('DLEASEPERCENTSQFT'),node.attribute('ILEASEOVGMONTH').blank? ? 0 : node.attribute('ILEASEOVGMONTH'),node.attribute('BLEASEPAYRENT').blank? ? 0 : node.attribute('BLEASEPAYRENT'),node.attribute('SLEASEFIELD10').blank? ? '' : node.attribute('SLEASEFIELD10').strip,node.attribute('SLEASEFIELD11').blank? ? '' : node.attribute('SLEASEFIELD11').strip,node.attribute('SLEASEFIELD12').blank? ? '' : node.attribute('SLEASEFIELD12').strip,node.attribute('SLEASEFIELD13').blank? ? '' : node.attribute('SLEASEFIELD13').strip,node.attribute('SLEASEFIELD14').blank? ? '' : node.attribute('SLEASEFIELD14').strip,node.attribute('SLEASEFIELD15').blank? ? '' : node.attribute('SLEASEFIELD15').strip,node.attribute('SLEASEFIELD16').blank? ? '' : node.attribute('SLEASEFIELD16').strip,node.attribute('SLEASEFIELD20').blank? ? '' : node.attribute('SLEASEFIELD20').strip,node.attribute('SLEASEFIELD21').blank? ? '' : node.attribute('SLEASEFIELD21').strip,node.attribute('SLEASEFIELD22').blank? ? '' : node.attribute('SLEASEFIELD22').strip,node.attribute('SLEASEFIELD23').blank? ? '' : node.attribute('SLEASEFIELD23').strip,node.attribute('SLEASEFIELD24').blank? ? '' : node.attribute('SLEASEFIELD24').strip,node.attribute('SLEASEFIELD25').blank? ? '' : node.attribute('SLEASEFIELD25').strip,node.attribute('SLEASEFIELD26').blank? ? '' : node.attribute('SLEASEFIELD26').strip,node.attribute('SLEASEFIELD30').blank? ? '' : node.attribute('SLEASEFIELD30').strip,node.attribute('SLEASEFIELD31').blank? ? '' : node.attribute('SLEASEFIELD31').strip,node.attribute('SLEASEFIELD32').blank? ? '' : node.attribute('SLEASEFIELD32').strip,node.attribute('SLEASEFIELD33').blank? ? '' : node.attribute('SLEASEFIELD33').strip,node.attribute('SLEASEFIELD34').blank? ? '' : node.attribute('SLEASEFIELD34').strip,node.attribute('SLEASEFIELD35').blank? ? '' : node.attribute('SLEASEFIELD35').strip,node.attribute('SLEASEFIELD36').blank? ? '' : node.attribute('SLEASEFIELD36').strip,node.attribute('SDEPOSIT0').blank? ? 0 : node.attribute('SDEPOSIT0'),node.attribute('SDEPOSIT1').blank? ? 0 : node.attribute('SDEPOSIT1'),node.attribute('SDEPOSIT2').blank? ? 0 : node.attribute('SDEPOSIT2'),node.attribute('SDEPOSIT3').blank? ? 0 : node.attribute('SDEPOSIT3'),node.attribute('SDEPOSIT4').blank? ? 0 : node.attribute('SDEPOSIT4'),node.attribute('SDEPOSIT5').blank? ? 0 : node.attribute('SDEPOSIT5'),node.attribute('SDEPOSIT6').blank? ? 0 : node.attribute('SDEPOSIT6'),node.attribute('SDEPOSIT7').blank? ? 0 : node.attribute('SDEPOSIT7'),node.attribute('SDEPOSIT8').blank? ? 0 : node.attribute('SDEPOSIT8'),node.attribute('SDEPOSIT9').blank? ? 0 : node.attribute('SDEPOSIT9'),node.attribute('SFIELDS0').blank? ? '' : node.attribute('SFIELDS0').strip,node.attribute('SFIELDS1').blank? ? '' : node.attribute('SFIELDS1').strip,node.attribute('SFIELDS2').blank? ? '' : node.attribute('SFIELDS2').strip,node.attribute('SFIELDS3').blank? ? '' : node.attribute('SFIELDS3').strip,node.attribute('SFIELDS4').blank? ? '' : node.attribute('SFIELDS4').strip,node.attribute('SFIELDS5').blank? ? '' : node.attribute('SFIELDS5').strip,node.attribute('SFIELDS6').blank? ? '' : node.attribute('SFIELDS6').strip,node.attribute('SFIELDS7').blank? ? '' : node.attribute('SFIELDS7').strip,node.attribute('SFIELDS8').blank? ? '' : node.attribute('SFIELDS8').strip,node.attribute('SFIELDS9').blank? ? '' : node.attribute('SFIELDS9').strip,node.attribute('SFIELDS10').blank? ? '' : node.attribute('SFIELDS10').strip,node.attribute('SFIELDS11').blank? ? '' : node.attribute('SFIELDS11').strip,node.attribute('SFIELDS12').blank? ? '' : node.attribute('SFIELDS12').strip,node.attribute('SFIELDS13').blank? ? '' : node.attribute('SFIELDS13').strip,node.attribute('SPHONENUM0').blank? ? '' : node.attribute('SPHONENUM0').strip,node.attribute('SPHONENUM1').blank? ? '' : node.attribute('SPHONENUM1').strip,node.attribute('SPHONENUM2').blank? ? '' : node.attribute('SPHONENUM2').strip,node.attribute('SPHONENUM3').blank? ? '' : node.attribute('SPHONENUM3').strip,node.attribute('SPHONENUM4').blank? ? '' : node.attribute('SPHONENUM4').strip,node.attribute('SPHONENUM5').blank? ? '' : node.attribute('SPHONENUM5').strip,node.attribute('SPHONENUM6').blank? ? '' : node.attribute('SPHONENUM6').strip,node.attribute('SPHONENUM7').blank? ? '' : node.attribute('SPHONENUM7').strip,node.attribute('SPHONENUM8').blank? ? '' : node.attribute('SPHONENUM8').strip,node.attribute('SPHONENUM9').blank? ? '' : node.attribute('SPHONENUM9').strip,node.attribute('DTRENEWDATE').blank? ? '' : node.attribute('DTRENEWDATE').strip,node.attribute('DTSIGNDATE').blank? ? '' : node.attribute('DTSIGNDATE').strip,node.attribute('IREASON').blank? ? 0 : node.attribute('IREASON'),node.attribute('BSEPINC').blank? ? 0 : node.attribute('BSEPINC'),node.attribute('HBILLTOTENANT').blank? ? 0 : node.attribute('HBILLTOTENANT'),node.attribute('HUNIT').blank? ? 0 : node.attribute('HUNIT'),node.attribute('BBASEREL').blank? ? 0 : node.attribute('BBASEREL'),node.attribute('PUTCODE').blank? ? '' : node.attribute('PUTCODE').strip,node.attribute('BSUBSIDIZED').blank? ? 0 : node.attribute('BSUBSIDIZED'),node.attribute('SDFITRANSIT').blank? ? '' : node.attribute('SDFITRANSIT').strip,node.attribute('SDFIACCTNO').blank? ? '' : node.attribute('SDFIACCTNO').strip,node.attribute('SACCTNAME').blank? ? '' : node.attribute('SACCTNAME').strip,node.attribute('BCOMMERCIAL').blank? ? 0 : node.attribute('BCOMMERCIAL'),node.attribute('BCHECKING').blank? ? 0 : node.attribute('BCHECKING'),node.attribute('BNOPAYMENTS').blank? ? 0 : node.attribute('BNOPAYMENTS'),node.attribute('BNORENT').blank? ? 0 : node.attribute('BNORENT'),node.attribute('SEMAIL').blank? ? '' : node.attribute('SEMAIL').strip,node.attribute('SURL').blank? ? '' : node.attribute('SURL').strip,node.attribute('SMAINTNOTES').blank? ? '' : node.attribute('SMAINTNOTES').strip,node.attribute('hCountry').blank? ? 0 : node.attribute('hCountry'),node.attribute('hLeaseCountry').blank? ? 0 : node.attribute('hLeaseCountry'),node.attribute('sLeaseAddr3').blank? ? '' : node.attribute('sLeaseAddr3').strip,node.attribute('bApplicant').blank? ? 0 : node.attribute('bApplicant'),node.attribute('iNSFCount').blank? ? 0 : node.attribute('iNSFCount'),node.attribute('iLateCount').blank? ? 0 : node.attribute('iLateCount'),node.attribute('bMTCSSubsidized').blank? ? 0 : node.attribute('bMTCSSubsidized'),node.attribute('BMOVEDOUT').blank? ? 0 : node.attribute('BMOVEDOUT'),node.attribute('dtStamp').blank? ? '' : node.attribute('dtStamp').strip,node.attribute('sMiddleName').blank? ? '' : node.attribute('sMiddleName').strip,node.attribute('hProspect').blank? ? 0 : node.attribute('hProspect'),node.attribute('hMaintBillTo').blank? ? 0 : node.attribute('hMaintBillTo'),node.attribute('iLateGrace2').blank? ? 0 : node.attribute('iLateGrace2'),node.attribute('dLateAmt2').blank? ? 0 : node.attribute('dLateAmt2'),node.attribute('dLatePercent2').blank? ? 0 : node.attribute('dLatePercent2'),node.attribute('dLateAmtMax').blank? ? 0 : node.attribute('dLateAmtMax'),node.attribute('dLatePercentMax').blank? ? 0 : node.attribute('dLatePercentMax'),node.attribute('iLateDaysMax').blank? ? 0 : node.attribute('iLateDaysMax'),node.attribute('iLateType2').blank? ? 0 : node.attribute('iLateType2'),node.attribute('iLateTypeMax').blank? ? 0 : node.attribute('iLateTypeMax'),node.attribute('dLateMinDueAmt').blank? ? 0 : node.attribute('dLateMinDueAmt'),node.attribute('dtCancelMoveIn').blank? ? '' : node.attribute('dtCancelMoveIn').strip,node.attribute('dtCancelNotice').blank? ? '' : node.attribute('dtCancelNotice').strip,node.attribute('dtMRdy').blank? ? '' : node.attribute('dtMRdy').strip,node.attribute('iLeaseType').blank? ? 0 : node.attribute('iLeaseType'),node.attribute('hCustomer').blank? ? 0 : node.attribute('hCustomer'),node.attribute('bACHOptOut').blank? ? 0 : node.attribute('bACHOptOut'),node.attribute('iNoticeType').blank? ? 0 : node.attribute('iNoticeType'),node.attribute('bAch').blank? ? 0 : node.attribute('bAch'),node.attribute('bNonResident').blank? ? 0 : node.attribute('bNonResident'),node.attribute('sEmail2').blank? ? '' : node.attribute('sEmail2').strip,node.attribute('bEmployeeUnit').blank? ? 0 : node.attribute('bEmployeeUnit'),node.attribute('hBillCurrency').blank? ? 0 : node.attribute('hBillCurrency'),node.attribute('hLeaseCurrency').blank? ? 0 : node.attribute('hLeaseCurrency'),node.attribute('iBlockInvoice').blank? ? 0 : node.attribute('iBlockInvoice'),node.attribute('dtContractEndDate').blank? ? '' : node.attribute('dtContractEndDate').strip,node.attribute('iMethodOfPayment').blank? ? 0 : node.attribute('iMethodOfPayment'),node.attribute('hTranType').blank? ? 0 : node.attribute('hTranType'),node.attribute('hCurExchRateType').blank? ? 0 : node.attribute('hCurExchRateType'),node.attribute('IINTERESTFREE').blank? ? 0 : node.attribute('IINTERESTFREE'),node.attribute('DLATEPERDAY').blank? ? 0 : node.attribute('DLATEPERDAY'),node.attribute('HBANK').blank? ? 0 : node.attribute('HBANK'),node.attribute('DADJUSTMENT').blank? ? 0 : node.attribute('DADJUSTMENT'),node.attribute('CMINTHRESHOLD').blank? ? 0 : node.attribute('CMINTHRESHOLD'),node.attribute('CMAXTHRESHOLD').blank? ? 0 : node.attribute('CMAXTHRESHOLD'),node.attribute('DMINPERCENTAGE').blank? ? 0 : node.attribute('DMINPERCENTAGE'),node.attribute('DMAXPERCENTAGE').blank? ? 0 : node.attribute('DMAXPERCENTAGE'),node.attribute('ILATEFEECALCBASIS').blank? ? 0 : node.attribute('ILATEFEECALCBASIS'),node.attribute('hVendor').blank? ? 0 : node.attribute('hVendor'),node.attribute('sRegNum').blank? ? '' : node.attribute('sRegNum').strip,node.attribute('dPropTaxRecovery').blank? ? 0 : node.attribute('dPropTaxRecovery'),node.attribute('dLFFactor').blank? ? 0 : node.attribute('dLFFactor'),node.attribute('dLFAdditionalFee').blank? ? 0 : node.attribute('dLFAdditionalFee'),node.attribute('iType').blank? ? 0 : node.attribute('iType'),node.attribute('sWebsite').blank? ? '' : node.attribute('sWebsite').strip,node.attribute('dContractArea').blank? ? 0 : node.attribute('dContractArea'),node.attribute('hUserCreatedBy').blank? ? 0 : node.attribute('hUserCreatedBy'),node.attribute('hUserModifiedBy').blank? ? 0 : node.attribute('hUserModifiedBy'),node.attribute('dtCreated').blank? ? '' : node.attribute('dtCreated').strip,node.attribute('dtLastModified').blank? ? '' : node.attribute('dtLastModified').strip,node.attribute('HRule').blank? ? 0 : node.attribute('HRule'),node.attribute('dtAnniversary').blank? ? '' : node.attribute('dtAnniversary').strip,node.attribute('dtLiability').blank? ? '' : node.attribute('dtLiability').strip,node.attribute('dtInterestPost').blank? ? '' : node.attribute('dtInterestPost').strip,node.attribute('DTotalCharges').blank? ? 0 : node.attribute('DTotalCharges'),node.attribute('bMTM').blank? ? 0 : node.attribute('bMTM'),node.attribute('hRoom').blank? ? 0 : node.attribute('hRoom'),node.attribute('hBed').blank? ? 0 : node.attribute('hBed'),node.attribute('iLeaseTerm').blank? ? 0 : node.attribute('iLeaseTerm'),node.attribute('sBedCode').blank? ? '' : node.attribute('sBedCode').strip,node.attribute('sRoomCode').blank? ? '' : node.attribute('sRoomCode').strip,node.attribute('bBillToCustomer').blank? ? 0 : node.attribute('bBillToCustomer'),node.attribute('bRGI').blank? ? 0 : node.attribute('bRGI'),node.attribute('hForeigndb').blank? ? 0 : node.attribute('hForeigndb'),node.attribute('sExtReference').blank? ? '' : node.attribute('sExtReference').strip,node.attribute('dtResponsibility').blank? ? '' : node.attribute('dtResponsibility').strip,node.attribute('dLastIntPaid').blank? ? 0 : node.attribute('dLastIntPaid'),node.attribute('sFedIdSecure').blank? ? 0 : node.attribute('sFedIdSecure'),node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_map['GLDetail'] = "GLDetail___cont___HPROP,HACCT,IBOOK,ITYPE,HTRAN,HDETAIL,HPERSON,DAMOUNT,STRANNUM,SREF,SNOTES,SDESC,SSEGMENT1,SSEGMENT2,SSEGMENT3,SSEGMENT4,DTPost,DTDATE,IFY,IFPERIOD,hAcctgPeriod,sOriginator,DTRANAMOUNT,HTRANCURRENCY,DVATAMOUNT,DVATAMOUNT2,HPARENT3,hMy,hVat,hVatTranType,dExchRate,tRowVersion___cont___node.attribute('HPROP').blank? ? 0 : node.attribute('HPROP'),node.attribute('HACCT').blank? ? 0 : node.attribute('HACCT'),node.attribute('IBOOK').blank? ? 0 : node.attribute('IBOOK'),node.attribute('ITYPE').blank? ? 0 : node.attribute('ITYPE'),node.attribute('HTRAN').blank? ? 0 : node.attribute('HTRAN'),node.attribute('HDETAIL').blank? ? 0 : node.attribute('HDETAIL'),node.attribute('HPERSON').blank? ? 0 : node.attribute('HPERSON'),node.attribute('DAMOUNT').blank? ? 0 : node.attribute('DAMOUNT'),node.attribute('STRANNUM').blank? ? '' : node.attribute('STRANNUM').strip,node.attribute('SREF').blank? ? '' : node.attribute('SREF').strip,node.attribute('SNOTES').blank? ? '' : node.attribute('SNOTES').strip,node.attribute('SDESC').blank? ? '' : node.attribute('SDESC').strip,node.attribute('SSEGMENT1').blank? ? '' : node.attribute('SSEGMENT1').strip,node.attribute('SSEGMENT2').blank? ? '' : node.attribute('SSEGMENT2').strip,node.attribute('SSEGMENT3').blank? ? '' : node.attribute('SSEGMENT3').strip,node.attribute('SSEGMENT4').blank? ? '' : node.attribute('SSEGMENT4').strip,node.attribute('DTPost').blank? ? '' : node.attribute('DTPost').strip,node.attribute('DTDATE').blank? ? '' : node.attribute('DTDATE').strip,node.attribute('IFY').blank? ? 0 : node.attribute('IFY'),node.attribute('IFPERIOD').blank? ? 0 : node.attribute('IFPERIOD'),node.attribute('hAcctgPeriod').blank? ? 0 : node.attribute('hAcctgPeriod'),node.attribute('sOriginator').blank? ? '' : node.attribute('sOriginator').strip,node.attribute('DTRANAMOUNT').blank? ? 0 : node.attribute('DTRANAMOUNT'),node.attribute('HTRANCURRENCY').blank? ? 0 : node.attribute('HTRANCURRENCY'),node.attribute('DVATAMOUNT').blank? ? 0 : node.attribute('DVATAMOUNT'),node.attribute('DVATAMOUNT2').blank? ? 0 : node.attribute('DVATAMOUNT2'),node.attribute('HPARENT3').blank? ? 0 : node.attribute('HPARENT3'),node.attribute('hMy').blank? ? 0 : node.attribute('hMy'),node.attribute('hVat').blank? ? 0 : node.attribute('hVat'),node.attribute('hVatTranType').blank? ? 0 : node.attribute('hVatTranType'),node.attribute('dExchRate').blank? ? 0 : node.attribute('dExchRate'),node.attribute('tRowVersion').blank? ? 0 : node.attribute('tRowVersion')"
      qry_data = qry_map[tbl_name]
      qry_data = qry_data.split('___cont___')
      chk_node = 'tenant' if tbl_name == 'tenant'
      if qry_data[0] == tbl_name
        row_expr = []
        reader = Nokogiri::XML::Reader(IO.read(Rails.root.to_s + '/GriffinResponse.xml'))
        reader.each do |node|
          if node.name == chk_node and node.node_type==1
            ins_data = []
            tmp = qry_data[2].split(',')
            tmp.each do |itr|
              if itr.include?('strip')
                ins_data << "\"#{eval(itr).gsub("\"","").gsub("\\","")}\""
              else
                ins_data << "#{eval(itr)}"
              end
            end
            p "call griffinAutomation#{tbl_name}(#{ins_data.join(',')})" # unless verbose.blank?
            ActiveRecord::Base.connection.execute("call griffinAutomation#{tbl_name}(#{ins_data.join(',')})")
          end
        end
      end
      ActiveRecord::Base.connection.execute("update timestamp_logs set last_ts=(select IFNULL(max(tRowVersion),0) from Griffin_#{tbl_name}) where table_name='#{tbl_name}'") unless (tbl_name.eql?("GLDetail") || tbl_name.eql?("tenant") || tbl_name.eql?("tenantaging"))
    end
  end

end
